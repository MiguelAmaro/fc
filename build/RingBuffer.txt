
========================================================================

** ELF Header Information

    File Name: RingBuffer.o

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    Operating System ABI: none
    ABI Version: 0
    File Type: ET_REL (Relocatable object) (1)
    Machine: EM_ARM (ARM)

    Entry offset (in SHF_ENTRYSECT section): 0x00000000
    Flags: None (0x05000000)

    ARM ELF revision: 5 (ABI version 2)

    Header size: 52 bytes (0x34)
    Program header entry size: 0 bytes (0x0)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 0
    Section header entries: 34

    Program header offset: 0 (0x00000000)
    Section header offset: 4744 (0x00001288)

    Section header string table index: 1

========================================================================

** Section #1 '.strtab' (SHT_STRTAB)
    Size   : 459 bytes


** Section #2 '.text' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 0 bytes (alignment 4)
    Address: 0x00000000


** Section #3 '.text.RingBuffer_Init' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 58 bytes (alignment 4)
    Address: 0x00000000

    $t.0
    [Anonymous symbol #40]
    RingBuffer_Init
        0x00000000:    b082        ..      SUB      sp,sp,#8
        0x00000002:    9001        ..      STR      r0,[sp,#4]
        0x00000004:    9801        ..      LDR      r0,[sp,#4]
        0x00000006:    2100        .!      MOVS     r1,#0
        0x00000008:    f8a01100    ....    STRH     r1,[r0,#0x100]
        0x0000000c:    9801        ..      LDR      r0,[sp,#4]
        0x0000000e:    f8a01102    ....    STRH     r1,[r0,#0x102]
        0x00000012:    9801        ..      LDR      r0,[sp,#4]
        0x00000014:    f8a01104    ....    STRH     r1,[r0,#0x104]
        0x00000018:    9100        ..      STR      r1,[sp,#0]
        0x0000001a:    e7ff        ..      B        {pc}+0x2 ; 0x1c
        0x0000001c:    9800        ..      LDR      r0,[sp,#0]
        0x0000001e:    28ff        .(      CMP      r0,#0xff
        0x00000020:    d809        ..      BHI      {pc}+0x16 ; 0x36
        0x00000022:    e7ff        ..      B        {pc}+0x2 ; 0x24
        0x00000024:    9801        ..      LDR      r0,[sp,#4]
        0x00000026:    9900        ..      LDR      r1,[sp,#0]
        0x00000028:    2220         "      MOVS     r2,#0x20
        0x0000002a:    5442        BT      STRB     r2,[r0,r1]
        0x0000002c:    e7ff        ..      B        {pc}+0x2 ; 0x2e
        0x0000002e:    9800        ..      LDR      r0,[sp,#0]
        0x00000030:    3001        .0      ADDS     r0,#1
        0x00000032:    9000        ..      STR      r0,[sp,#0]
        0x00000034:    e7f2        ..      B        {pc}-0x18 ; 0x1c
        0x00000036:    b002        ..      ADD      sp,sp,#8
        0x00000038:    4770        pG      BX       lr

** Section #4 '.ARM.exidx.text.RingBuffer_Init' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #3 '.text.RingBuffer_Init'


** Section #5 '.rel.ARM.exidx.text.RingBuffer_Init' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #33 '.symtab'
    1 relocations applied to section #4 '.ARM.exidx.text.RingBuffer_Init'


** Section #6 '.text.RingBuffer_Full' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 24 bytes (alignment 4)
    Address: 0x00000000

    $t.1
    [Anonymous symbol #41]
    RingBuffer_Full
        0x00000000:    b081        ..      SUB      sp,sp,#4
        0x00000002:    9000        ..      STR      r0,[sp,#0]
        0x00000004:    9800        ..      LDR      r0,[sp,#0]
        0x00000006:    f8b00100    ....    LDRH     r0,[r0,#0x100]
        0x0000000a:    f5a07080    ...p    SUB      r0,r0,#0x100
        0x0000000e:    fab0f080    ....    CLZ      r0,r0
        0x00000012:    0940        @.      LSRS     r0,r0,#5
        0x00000014:    b001        ..      ADD      sp,sp,#4
        0x00000016:    4770        pG      BX       lr

** Section #7 '.ARM.exidx.text.RingBuffer_Full' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #6 '.text.RingBuffer_Full'


** Section #8 '.rel.ARM.exidx.text.RingBuffer_Full' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #33 '.symtab'
    1 relocations applied to section #7 '.ARM.exidx.text.RingBuffer_Full'


** Section #9 '.text.RingBuffer_Empty' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 20 bytes (alignment 4)
    Address: 0x00000000

    $t.2
    [Anonymous symbol #42]
    RingBuffer_Empty
        0x00000000:    b081        ..      SUB      sp,sp,#4
        0x00000002:    9000        ..      STR      r0,[sp,#0]
        0x00000004:    9800        ..      LDR      r0,[sp,#0]
        0x00000006:    f8b00100    ....    LDRH     r0,[r0,#0x100]
        0x0000000a:    fab0f080    ....    CLZ      r0,r0
        0x0000000e:    0940        @.      LSRS     r0,r0,#5
        0x00000010:    b001        ..      ADD      sp,sp,#4
        0x00000012:    4770        pG      BX       lr

** Section #10 '.ARM.exidx.text.RingBuffer_Empty' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #9 '.text.RingBuffer_Empty'


** Section #11 '.rel.ARM.exidx.text.RingBuffer_Empty' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #33 '.symtab'
    1 relocations applied to section #10 '.ARM.exidx.text.RingBuffer_Empty'


** Section #12 '.text.RingBuffer_Enqueue_Byte' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 102 bytes (alignment 4)
    Address: 0x00000000

    $t.3
    [Anonymous symbol #43]
    RingBuffer_Enqueue_Byte
        0x00000000:    b580        ..      PUSH     {r7,lr}
        0x00000002:    b088        ..      SUB      sp,sp,#0x20
        0x00000004:    460a        .F      MOV      r2,r1
        0x00000006:    9004        ..      STR      r0,[sp,#0x10]
        0x00000008:    f88d100f    ....    STRB     r1,[sp,#0xf]
        0x0000000c:    9804        ..      LDR      r0,[sp,#0x10]
        0x0000000e:    9201        ..      STR      r2,[sp,#4]
        0x00000010:    f7fffffe    ....    BL       RingBuffer_Full ; 0x0 Section #6
        0x00000014:    2800        .(      CMP      r0,#0
        0x00000016:    d124        $.      BNE      {pc}+0x4c ; 0x62
        0x00000018:    e7ff        ..      B        {pc}+0x2 ; 0x1a
        0x0000001a:    f89d000f    ....    LDRB     r0,[sp,#0xf]
        0x0000001e:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000020:    f8b12104    ...!    LDRH     r2,[r1,#0x104]
        0x00000024:    1c53        S.      ADDS     r3,r2,#1
        0x00000026:    f8a13104    ...1    STRH     r3,[r1,#0x104]
        0x0000002a:    5488        .T      STRB     r0,[r1,r2]
        0x0000002c:    9804        ..      LDR      r0,[sp,#0x10]
        0x0000002e:    f8b01104    ....    LDRH     r1,[r0,#0x104]
        0x00000032:    b2c9        ..      UXTB     r1,r1
        0x00000034:    f8a01104    ....    STRH     r1,[r0,#0x104]
        0x00000038:    f3ef8010    ....    MRS      r0,PRIMASK
        0x0000003c:    9005        ..      STR      r0,[sp,#0x14]
        0x0000003e:    9805        ..      LDR      r0,[sp,#0x14]
        0x00000040:    9002        ..      STR      r0,[sp,#8]
        0x00000042:    f3ef8010    ....    MRS      r0,PRIMASK
        0x00000046:    b672        r.      CPSID    i
        0x00000048:    9006        ..      STR      r0,[sp,#0x18]
        0x0000004a:    9804        ..      LDR      r0,[sp,#0x10]
        0x0000004c:    f8b01100    ....    LDRH     r1,[r0,#0x100]
        0x00000050:    3101        .1      ADDS     r1,#1
        0x00000052:    f8a01100    ....    STRH     r1,[r0,#0x100]
        0x00000056:    9802        ..      LDR      r0,[sp,#8]
        0x00000058:    9007        ..      STR      r0,[sp,#0x1c]
        0x0000005a:    9807        ..      LDR      r0,[sp,#0x1c]
        0x0000005c:    f3808810    ....    MSR      PRIMASK,r0
        0x00000060:    e7ff        ..      B        {pc}+0x2 ; 0x62
        0x00000062:    b008        ..      ADD      sp,sp,#0x20
        0x00000064:    bd80        ..      POP      {r7,pc}

** Section #13 '.rel.text.RingBuffer_Enqueue_Byte' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #33 '.symtab'
    1 relocations applied to section #12 '.text.RingBuffer_Enqueue_Byte'


** Section #14 '.ARM.exidx.text.RingBuffer_Enqueue_Byte' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #12 '.text.RingBuffer_Enqueue_Byte'


** Section #15 '.rel.ARM.exidx.text.RingBuffer_Enqueue_Byte' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #33 '.symtab'
    1 relocations applied to section #14 '.ARM.exidx.text.RingBuffer_Enqueue_Byte'


** Section #16 '.text.RingBuffer_Dequeue_Byte' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 114 bytes (alignment 4)
    Address: 0x00000000

    $t.4
    [Anonymous symbol #44]
    RingBuffer_Dequeue_Byte
        0x00000000:    b580        ..      PUSH     {r7,lr}
        0x00000002:    b086        ..      SUB      sp,sp,#0x18
        0x00000004:    9002        ..      STR      r0,[sp,#8]
        0x00000006:    2000        .       MOVS     r0,#0
        0x00000008:    f88d0003    ....    STRB     r0,[sp,#3]
        0x0000000c:    9802        ..      LDR      r0,[sp,#8]
        0x0000000e:    f7fffffe    ....    BL       RingBuffer_Empty ; 0x0 Section #9
        0x00000012:    2800        .(      CMP      r0,#0
        0x00000014:    d129        ).      BNE      {pc}+0x56 ; 0x6a
        0x00000016:    e7ff        ..      B        {pc}+0x2 ; 0x18
        0x00000018:    9802        ..      LDR      r0,[sp,#8]
        0x0000001a:    f8b01102    ....    LDRH     r1,[r0,#0x102]
        0x0000001e:    5c40        @\      LDRB     r0,[r0,r1]
        0x00000020:    f88d0003    ....    STRB     r0,[sp,#3]
        0x00000024:    9802        ..      LDR      r0,[sp,#8]
        0x00000026:    f8b01102    ....    LDRH     r1,[r0,#0x102]
        0x0000002a:    1c4a        J.      ADDS     r2,r1,#1
        0x0000002c:    f8a02102    ...!    STRH     r2,[r0,#0x102]
        0x00000030:    2220         "      MOVS     r2,#0x20
        0x00000032:    5442        BT      STRB     r2,[r0,r1]
        0x00000034:    9802        ..      LDR      r0,[sp,#8]
        0x00000036:    f8b01102    ....    LDRH     r1,[r0,#0x102]
        0x0000003a:    b2c9        ..      UXTB     r1,r1
        0x0000003c:    f8a01102    ....    STRH     r1,[r0,#0x102]
        0x00000040:    f3ef8010    ....    MRS      r0,PRIMASK
        0x00000044:    9003        ..      STR      r0,[sp,#0xc]
        0x00000046:    9803        ..      LDR      r0,[sp,#0xc]
        0x00000048:    9001        ..      STR      r0,[sp,#4]
        0x0000004a:    f3ef8010    ....    MRS      r0,PRIMASK
        0x0000004e:    b672        r.      CPSID    i
        0x00000050:    9004        ..      STR      r0,[sp,#0x10]
        0x00000052:    9802        ..      LDR      r0,[sp,#8]
        0x00000054:    f8b01100    ....    LDRH     r1,[r0,#0x100]
        0x00000058:    3901        .9      SUBS     r1,#1
        0x0000005a:    f8a01100    ....    STRH     r1,[r0,#0x100]
        0x0000005e:    9801        ..      LDR      r0,[sp,#4]
        0x00000060:    9005        ..      STR      r0,[sp,#0x14]
        0x00000062:    9805        ..      LDR      r0,[sp,#0x14]
        0x00000064:    f3808810    ....    MSR      PRIMASK,r0
        0x00000068:    e7ff        ..      B        {pc}+0x2 ; 0x6a
        0x0000006a:    f89d0003    ....    LDRB     r0,[sp,#3]
        0x0000006e:    b006        ..      ADD      sp,sp,#0x18
        0x00000070:    bd80        ..      POP      {r7,pc}

** Section #17 '.rel.text.RingBuffer_Dequeue_Byte' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #33 '.symtab'
    1 relocations applied to section #16 '.text.RingBuffer_Dequeue_Byte'


** Section #18 '.ARM.exidx.text.RingBuffer_Dequeue_Byte' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #16 '.text.RingBuffer_Dequeue_Byte'


** Section #19 '.rel.ARM.exidx.text.RingBuffer_Dequeue_Byte' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #33 '.symtab'
    1 relocations applied to section #18 '.ARM.exidx.text.RingBuffer_Dequeue_Byte'


** Section #20 '.debug_str' (SHT_PROGBITS) [SHF_MERGE + SHF_STRINGS]
    Size   : 437 bytes


** Section #21 '.debug_abbrev' (SHT_PROGBITS)
    Size   : 309 bytes


** Section #22 '.debug_info' (SHT_PROGBITS)
    Size   : 658 bytes


** Section #23 '.rel.debug_info' (SHT_REL)
    Size   : 424 bytes (alignment 4)
    Symbol table #33 '.symtab'
    53 relocations applied to section #22 '.debug_info'


** Section #24 '.debug_ranges' (SHT_PROGBITS)
    Size   : 48 bytes


** Section #25 '.rel.debug_ranges' (SHT_REL)
    Size   : 80 bytes (alignment 4)
    Symbol table #33 '.symtab'
    10 relocations applied to section #24 '.debug_ranges'


** Section #26 '.comment' (SHT_PROGBITS) [SHF_MERGE + SHF_STRINGS]
    Size   : 56 bytes


** Section #27 '.note.GNU-stack' (SHT_PROGBITS)
    Size   : 0 bytes


** Section #28 '.ARM.attributes' (SHT_ARM_ATTRIBUTES)
    Size   : 88 bytes


** Section #29 '.debug_frame' (SHT_PROGBITS)
    Size   : 136 bytes (alignment 4)


** Section #30 '.rel.debug_frame' (SHT_REL)
    Size   : 80 bytes (alignment 4)
    Symbol table #33 '.symtab'
    10 relocations applied to section #29 '.debug_frame'


** Section #31 '.debug_line' (SHT_PROGBITS)
    Size   : 581 bytes


** Section #32 '.rel.debug_line' (SHT_REL)
    Size   : 40 bytes (alignment 4)
    Symbol table #33 '.symtab'
    5 relocations applied to section #31 '.debug_line'


** Section #33 '.symtab' (SHT_SYMTAB)
    Size   : 864 bytes (alignment 4)
    String table #1 '.strtab'
    Last local symbol no. 48


