
========================================================================

** ELF Header Information

    File Name: K82F_FlightController.o

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    Operating System ABI: none
    ABI Version: 0
    File Type: ET_REL (Relocatable object) (1)
    Machine: EM_ARM (ARM)

    Entry offset (in SHF_ENTRYSECT section): 0x00000000
    Flags: None (0x05000000)

    ARM ELF revision: 5 (ABI version 2)

    Header size: 52 bytes (0x34)
    Program header entry size: 0 bytes (0x0)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 0
    Section header entries: 55

    Program header offset: 0 (0x00000000)
    Section header offset: 19560 (0x00004c68)

    Section header string table index: 1

========================================================================

** Section #1 '.strtab' (SHT_STRTAB)
    Size   : 899 bytes


** Section #2 '.text' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 0 bytes (alignment 4)
    Address: 0x00000000


** Section #3 '.text.Debug_init_uart' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 336 bytes (alignment 8)
    Address: 0x00000000

    $t.0
    [Anonymous symbol #303]
    Debug_init_uart
        0x00000000:    b580        ..      PUSH     {r7,lr}
        0x00000002:    b086        ..      SUB      sp,sp,#0x18
        0x00000004:    9005        ..      STR      r0,[sp,#0x14]
        0x00000006:    f2480038    H.8.    MOV      r0,#0x8038
        0x0000000a:    f2c40004    ....    MOVT     r0,#0x4004
        0x0000000e:    6801        .h      LDR      r1,[r0,#0]
        0x00000010:    f4416100    A..a    ORR      r1,r1,#0x800
        0x00000014:    6001        .`      STR      r1,[r0,#0]
        0x00000016:    f248002c    H.,.    MOV      r0,#0x802c
        0x0000001a:    f2c40004    ....    MOVT     r0,#0x4004
        0x0000001e:    6801        .h      LDR      r1,[r0,#0]
        0x00000020:    f4410180    A...    ORR      r1,r1,#0x400000
        0x00000024:    6001        .`      STR      r1,[r0,#0]
        0x00000026:    f2460008    F...    MOV      r0,#0x6008
        0x0000002a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000002e:    6801        .h      LDR      r1,[r0,#0]
        0x00000030:    f4212140    !.@!    BIC      r1,r1,#0xc0000
        0x00000034:    6001        .`      STR      r1,[r0,#0]
        0x00000036:    f2480104    H...    MOV      r1,#0x8004
        0x0000003a:    f2c40104    ....    MOVT     r1,#0x4004
        0x0000003e:    680a        .h      LDR      r2,[r1,#0]
        0x00000040:    f0426280    B..b    ORR      r2,r2,#0x4000000
        0x00000044:    600a        .`      STR      r2,[r1,#0]
        0x00000046:    680a        .h      LDR      r2,[r1,#0]
        0x00000048:    f4423240    B.@2    ORR      r2,r2,#0x30000
        0x0000004c:    600a        .`      STR      r2,[r1,#0]
        0x0000004e:    f24b0138    K.8.    MOV      r1,#0xb038
        0x00000052:    f2c40104    ....    MOVT     r1,#0x4004
        0x00000056:    f44f7240    O.@r    MOV      r2,#0x300
        0x0000005a:    600a        .`      STR      r2,[r1,#0]
        0x0000005c:    f24b013c    K.<.    MOV      r1,#0xb03c
        0x00000060:    f2c40104    ....    MOVT     r1,#0x4004
        0x00000064:    600a        .`      STR      r2,[r1,#0]
        0x00000066:    9905        ..      LDR      r1,[sp,#0x14]
        0x00000068:    0109        ..      LSLS     r1,r1,#4
        0x0000006a:    9003        ..      STR      r0,[sp,#0xc]
        0x0000006c:    4608        .F      MOV      r0,r1
        0x0000006e:    f7fffffe    ....    BL       __aeabi_ui2d
        0x00000072:    ec410b10    A...    VMOV     d0,r0,r1
        0x00000076:    ed9f1b34    ..4.    VLDR     d1,[pc,#208] ; [0x148] = 0
        0x0000007a:    ec510b11    Q...    VMOV     r0,r1,d1
        0x0000007e:    ec532b10    S..+    VMOV     r2,r3,d0
        0x00000082:    f7fffffe    ....    BL       __aeabi_ddiv
        0x00000086:    ec410b10    A...    VMOV     d0,r0,r1
        0x0000008a:    ec510b10    Q...    VMOV     r0,r1,d0
        0x0000008e:    f7fffffe    ....    BL       __aeabi_d2iz
        0x00000092:    f8ad0010    ....    STRH     r0,[sp,#0x10]
        0x00000096:    f2460000    F...    MOVW     r0,#0x6000
        0x0000009a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000009e:    6801        .h      LDR      r1,[r0,#0]
        0x000000a0:    f64172ff    A..r    MOV      r2,#0x1fff
        0x000000a4:    4391        .C      BICS     r1,r1,r2
        0x000000a6:    6001        .`      STR      r1,[r0,#0]
        0x000000a8:    f8bd1010    ....    LDRH     r1,[sp,#0x10]
        0x000000ac:    f36f315f    o._1    BFC      r1,#13,#19
        0x000000b0:    6802        .h      LDR      r2,[r0,#0]
        0x000000b2:    4311        .C      ORRS     r1,r1,r2
        0x000000b4:    6001        .`      STR      r1,[r0,#0]
        0x000000b6:    6801        .h      LDR      r1,[r0,#0]
        0x000000b8:    f0416170    A.pa    ORR      r1,r1,#0xf000000
        0x000000bc:    6001        .`      STR      r1,[r0,#0]
        0x000000be:    6801        .h      LDR      r1,[r0,#0]
        0x000000c0:    6001        .`      STR      r1,[r0,#0]
        0x000000c2:    2000        .       MOVS     r0,#0
        0x000000c4:    9903        ..      LDR      r1,[sp,#0xc]
        0x000000c6:    6008        .`      STR      r0,[r1,#0]
        0x000000c8:    6008        .`      STR      r0,[r1,#0]
        0x000000ca:    f2460004    F...    MOV      r0,#0x6004
        0x000000ce:    f2c4000d    ....    MOVT     r0,#0x400d
        0x000000d2:    f44f2270    O.p"    MOV      r2,#0xf0000
        0x000000d6:    6002        .`      STR      r2,[r0,#0]
        0x000000d8:    6802        .h      LDR      r2,[r0,#0]
        0x000000da:    f4422270    B.p"    ORR      r2,r2,#0xf0000
        0x000000de:    6002        .`      STR      r2,[r0,#0]
        0x000000e0:    6802        .h      LDR      r2,[r0,#0]
        0x000000e2:    6002        .`      STR      r2,[r0,#0]
        0x000000e4:    f2400200    @...    MOVW     r2,#:LOWER16: transmitQueue
        0x000000e8:    f2c00200    ....    MOVT     r2,#:UPPER16: transmitQueue
        0x000000ec:    9002        ..      STR      r0,[sp,#8]
        0x000000ee:    4610        .F      MOV      r0,r2
        0x000000f0:    f7fffffe    ....    BL       RingBuffer_Init
        0x000000f4:    f2400000    @...    MOVW     r0,#:LOWER16: receiveQueue
        0x000000f8:    f2c00000    ....    MOVT     r0,#:UPPER16: receiveQueue
        0x000000fc:    f7fffffe    ....    BL       RingBuffer_Init
        0x00000100:    2022        "       MOVS     r0,#0x22
        0x00000102:    2102        .!      MOVS     r1,#2
        0x00000104:    9001        ..      STR      r0,[sp,#4]
        0x00000106:    f7fffffe    ....    BL       __NVIC_SetPriority ; 0x0 Section #7
        0x0000010a:    9801        ..      LDR      r0,[sp,#4]
        0x0000010c:    f7fffffe    ....    BL       __NVIC_ClearPendingIRQ ; 0x0 Section #10
        0x00000110:    9801        ..      LDR      r0,[sp,#4]
        0x00000112:    f7fffffe    ....    BL       __NVIC_EnableIRQ ; 0x0 Section #13
        0x00000116:    9803        ..      LDR      r0,[sp,#0xc]
        0x00000118:    6801        .h      LDR      r1,[r0,#0]
        0x0000011a:    f4411100    A...    ORR      r1,r1,#0x200000
        0x0000011e:    6001        .`      STR      r1,[r0,#0]
        0x00000120:    6801        .h      LDR      r1,[r0,#0]
        0x00000122:    f4412140    A.@!    ORR      r1,r1,#0xc0000
        0x00000126:    6001        .`      STR      r1,[r0,#0]
        0x00000128:    f246010c    F...    MOV      r1,#0x600c
        0x0000012c:    f2c4010d    ....    MOVT     r1,#0x400d
        0x00000130:    6809        .h      LDR      r1,[r1,#0]
        0x00000132:    f88d1013    ....    STRB     r1,[sp,#0x13]
        0x00000136:    9902        ..      LDR      r1,[sp,#8]
        0x00000138:    680a        .h      LDR      r2,[r1,#0]
        0x0000013a:    f4221200    "...    BIC      r2,r2,#0x200000
        0x0000013e:    600a        .`      STR      r2,[r1,#0]
        0x00000140:    b006        ..      ADD      sp,sp,#0x18
        0x00000142:    bd80        ..      POP      {r7,pc}
        0x00000144:    bf00        ..      NOP      
        0x00000146:    bf00        ..      NOP      
    $d.1
        0x00000148:    00000000    ....    DCD    0
        0x0000014c:    4186e360    `..A    DCD    1099359072

** Section #4 '.rel.text.Debug_init_uart' (SHT_REL)
    Size   : 96 bytes (alignment 4)
    Symbol table #54 '.symtab'
    12 relocations applied to section #3 '.text.Debug_init_uart'


** Section #5 '.ARM.exidx.text.Debug_init_uart' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #3 '.text.Debug_init_uart'


** Section #6 '.rel.ARM.exidx.text.Debug_init_uart' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #54 '.symtab'
    1 relocations applied to section #5 '.ARM.exidx.text.Debug_init_uart'


** Section #7 '.text.__NVIC_SetPriority' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 68 bytes (alignment 4)
    Address: 0x00000000

    $t.2
    __NVIC_SetPriority
    [Anonymous symbol #304]
        0x00000000:    b082        ..      SUB      sp,sp,#8
        0x00000002:    4602        .F      MOV      r2,r0
        0x00000004:    f88d0007    ....    STRB     r0,[sp,#7]
        0x00000008:    9100        ..      STR      r1,[sp,#0]
        0x0000000a:    f99d0007    ....    LDRSB    r0,[sp,#7]
        0x0000000e:    2800        .(      CMP      r0,#0
        0x00000010:    d40a        ..      BMI      {pc}+0x18 ; 0x28
        0x00000012:    e7ff        ..      B        {pc}+0x2 ; 0x14
        0x00000014:    9800        ..      LDR      r0,[sp,#0]
        0x00000016:    0100        ..      LSLS     r0,r0,#4
        0x00000018:    f99d1007    ....    LDRSB    r1,[sp,#7]
        0x0000001c:    f24e4200    N..B    MOVW     r2,#0xe400
        0x00000020:    f2ce0200    ....    MOVT     r2,#0xe000
        0x00000024:    5488        .T      STRB     r0,[r1,r2]
        0x00000026:    e00b        ..      B        {pc}+0x1a ; 0x40
        0x00000028:    9800        ..      LDR      r0,[sp,#0]
        0x0000002a:    0100        ..      LSLS     r0,r0,#4
        0x0000002c:    f89d1007    ....    LDRB     r1,[sp,#7]
        0x00000030:    f001010f    ....    AND      r1,r1,#0xf
        0x00000034:    f64e5214    N..R    MOV      r2,#0xed14
        0x00000038:    f2ce0200    ....    MOVT     r2,#0xe000
        0x0000003c:    5488        .T      STRB     r0,[r1,r2]
        0x0000003e:    e7ff        ..      B        {pc}+0x2 ; 0x40
        0x00000040:    b002        ..      ADD      sp,sp,#8
        0x00000042:    4770        pG      BX       lr

** Section #8 '.ARM.exidx.text.__NVIC_SetPriority' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #7 '.text.__NVIC_SetPriority'


** Section #9 '.rel.ARM.exidx.text.__NVIC_SetPriority' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #54 '.symtab'
    1 relocations applied to section #8 '.ARM.exidx.text.__NVIC_SetPriority'


** Section #10 '.text.__NVIC_ClearPendingIRQ' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 52 bytes (alignment 4)
    Address: 0x00000000

    $t.3
    __NVIC_ClearPendingIRQ
    [Anonymous symbol #305]
        0x00000000:    b081        ..      SUB      sp,sp,#4
        0x00000002:    4601        .F      MOV      r1,r0
        0x00000004:    f88d0003    ....    STRB     r0,[sp,#3]
        0x00000008:    f99d0003    ....    LDRSB    r0,[sp,#3]
        0x0000000c:    2800        .(      CMP      r0,#0
        0x0000000e:    d40f        ..      BMI      {pc}+0x22 ; 0x30
        0x00000010:    e7ff        ..      B        {pc}+0x2 ; 0x12
        0x00000012:    f99d0003    ....    LDRSB    r0,[sp,#3]
        0x00000016:    f000011f    ....    AND      r1,r0,#0x1f
        0x0000001a:    2201        ."      MOVS     r2,#1
        0x0000001c:    fa02f101    ....    LSL      r1,r2,r1
        0x00000020:    0940        @.      LSRS     r0,r0,#5
        0x00000022:    f24e2280    N.."    MOV      r2,#0xe280
        0x00000026:    f2ce0200    ....    MOVT     r2,#0xe000
        0x0000002a:    f8421020    B. .    STR      r1,[r2,r0,LSL #2]
        0x0000002e:    e7ff        ..      B        {pc}+0x2 ; 0x30
        0x00000030:    b001        ..      ADD      sp,sp,#4
        0x00000032:    4770        pG      BX       lr

** Section #11 '.ARM.exidx.text.__NVIC_ClearPendingIRQ' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #10 '.text.__NVIC_ClearPendingIRQ'


** Section #12 '.rel.ARM.exidx.text.__NVIC_ClearPendingIRQ' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #54 '.symtab'
    1 relocations applied to section #11 '.ARM.exidx.text.__NVIC_ClearPendingIRQ'


** Section #13 '.text.__NVIC_EnableIRQ' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 52 bytes (alignment 4)
    Address: 0x00000000

    $t.4
    __NVIC_EnableIRQ
    [Anonymous symbol #306]
        0x00000000:    b081        ..      SUB      sp,sp,#4
        0x00000002:    4601        .F      MOV      r1,r0
        0x00000004:    f88d0003    ....    STRB     r0,[sp,#3]
        0x00000008:    f99d0003    ....    LDRSB    r0,[sp,#3]
        0x0000000c:    2800        .(      CMP      r0,#0
        0x0000000e:    d40f        ..      BMI      {pc}+0x22 ; 0x30
        0x00000010:    e7ff        ..      B        {pc}+0x2 ; 0x12
        0x00000012:    f99d0003    ....    LDRSB    r0,[sp,#3]
        0x00000016:    f000011f    ....    AND      r1,r0,#0x1f
        0x0000001a:    2201        ."      MOVS     r2,#1
        0x0000001c:    fa02f101    ....    LSL      r1,r2,r1
        0x00000020:    0940        @.      LSRS     r0,r0,#5
        0x00000022:    f24e1200    N...    MOVW     r2,#0xe100
        0x00000026:    f2ce0200    ....    MOVT     r2,#0xe000
        0x0000002a:    f8421020    B. .    STR      r1,[r2,r0,LSL #2]
        0x0000002e:    e7ff        ..      B        {pc}+0x2 ; 0x30
        0x00000030:    b001        ..      ADD      sp,sp,#4
        0x00000032:    4770        pG      BX       lr

** Section #14 '.ARM.exidx.text.__NVIC_EnableIRQ' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #13 '.text.__NVIC_EnableIRQ'


** Section #15 '.rel.ARM.exidx.text.__NVIC_EnableIRQ' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #54 '.symtab'
    1 relocations applied to section #14 '.ARM.exidx.text.__NVIC_EnableIRQ'


** Section #16 '.text.LPUART4_IRQHandler' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 228 bytes (alignment 4)
    Address: 0x00000000

    $t.5
    [Anonymous symbol #307]
    LPUART4_IRQHandler
        0x00000000:    b580        ..      PUSH     {r7,lr}
        0x00000002:    b082        ..      SUB      sp,sp,#8
        0x00000004:    f2460004    F...    MOV      r0,#0x6004
        0x00000008:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000000c:    6800        .h      LDR      r0,[r0,#0]
        0x0000000e:    f4102f70    ..p/    TST      r0,#0xf0000
        0x00000012:    d010        ..      BEQ      {pc}+0x24 ; 0x36
        0x00000014:    e7ff        ..      B        {pc}+0x2 ; 0x16
        0x00000016:    f2460004    F...    MOV      r0,#0x6004
        0x0000001a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000001e:    6801        .h      LDR      r1,[r0,#0]
        0x00000020:    f4412170    A.p!    ORR      r1,r1,#0xf0000
        0x00000024:    6001        .`      STR      r1,[r0,#0]
        0x00000026:    f246000c    F...    MOV      r0,#0x600c
        0x0000002a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000002e:    6800        .h      LDR      r0,[r0,#0]
        0x00000030:    f88d0007    ....    STRB     r0,[sp,#7]
        0x00000034:    e7ff        ..      B        {pc}+0x2 ; 0x36
        0x00000036:    f2460004    F...    MOV      r0,#0x6004
        0x0000003a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000003e:    6800        .h      LDR      r0,[r0,#0]
        0x00000040:    0280        ..      LSLS     r0,r0,#10
        0x00000042:    2800        .(      CMP      r0,#0
        0x00000044:    d51b        ..      BPL      {pc}+0x3a ; 0x7e
        0x00000046:    e7ff        ..      B        {pc}+0x2 ; 0x48
        0x00000048:    f246000c    F...    MOV      r0,#0x600c
        0x0000004c:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000050:    6800        .h      LDR      r0,[r0,#0]
        0x00000052:    f88d0007    ....    STRB     r0,[sp,#7]
        0x00000056:    f2400000    @...    MOVW     r0,#:LOWER16: receiveQueue
        0x0000005a:    f2c00000    ....    MOVT     r0,#:UPPER16: receiveQueue
        0x0000005e:    f7fffffe    ....    BL       RingBuffer_Full
        0x00000062:    2800        .(      CMP      r0,#0
        0x00000064:    d109        ..      BNE      {pc}+0x16 ; 0x7a
        0x00000066:    e7ff        ..      B        {pc}+0x2 ; 0x68
        0x00000068:    f89d1007    ....    LDRB     r1,[sp,#7]
        0x0000006c:    f2400000    @...    MOVW     r0,#:LOWER16: receiveQueue
        0x00000070:    f2c00000    ....    MOVT     r0,#:UPPER16: receiveQueue
        0x00000074:    f7fffffe    ....    BL       RingBuffer_Enqueue_Byte
        0x00000078:    e000        ..      B        {pc}+0x4 ; 0x7c
        0x0000007a:    e7ff        ..      B        {pc}+0x2 ; 0x7c
        0x0000007c:    e7ff        ..      B        {pc}+0x2 ; 0x7e
        0x0000007e:    f2460008    F...    MOV      r0,#0x6008
        0x00000082:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000086:    6800        .h      LDR      r0,[r0,#0]
        0x00000088:    0200        ..      LSLS     r0,r0,#8
        0x0000008a:    2800        .(      CMP      r0,#0
        0x0000008c:    d528        (.      BPL      {pc}+0x54 ; 0xe0
        0x0000008e:    e7ff        ..      B        {pc}+0x2 ; 0x90
        0x00000090:    f2460004    F...    MOV      r0,#0x6004
        0x00000094:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000098:    6800        .h      LDR      r0,[r0,#0]
        0x0000009a:    0200        ..      LSLS     r0,r0,#8
        0x0000009c:    2800        .(      CMP      r0,#0
        0x0000009e:    d51f        ..      BPL      {pc}+0x42 ; 0xe0
        0x000000a0:    e7ff        ..      B        {pc}+0x2 ; 0xa2
        0x000000a2:    f2400000    @...    MOVW     r0,#:LOWER16: transmitQueue
        0x000000a6:    f2c00000    ....    MOVT     r0,#:UPPER16: transmitQueue
        0x000000aa:    f7fffffe    ....    BL       RingBuffer_Empty
        0x000000ae:    2800        .(      CMP      r0,#0
        0x000000b0:    d10c        ..      BNE      {pc}+0x1c ; 0xcc
        0x000000b2:    e7ff        ..      B        {pc}+0x2 ; 0xb4
        0x000000b4:    f2400000    @...    MOVW     r0,#:LOWER16: transmitQueue
        0x000000b8:    f2c00000    ....    MOVT     r0,#:UPPER16: transmitQueue
        0x000000bc:    f7fffffe    ....    BL       RingBuffer_Dequeue_Byte
        0x000000c0:    f246010c    F...    MOV      r1,#0x600c
        0x000000c4:    f2c4010d    ....    MOVT     r1,#0x400d
        0x000000c8:    6008        .`      STR      r0,[r1,#0]
        0x000000ca:    e008        ..      B        {pc}+0x14 ; 0xde
        0x000000cc:    f2460008    F...    MOV      r0,#0x6008
        0x000000d0:    f2c4000d    ....    MOVT     r0,#0x400d
        0x000000d4:    6801        .h      LDR      r1,[r0,#0]
        0x000000d6:    f4210100    !...    BIC      r1,r1,#0x800000
        0x000000da:    6001        .`      STR      r1,[r0,#0]
        0x000000dc:    e7ff        ..      B        {pc}+0x2 ; 0xde
        0x000000de:    e7ff        ..      B        {pc}+0x2 ; 0xe0
        0x000000e0:    b002        ..      ADD      sp,sp,#8
        0x000000e2:    bd80        ..      POP      {r7,pc}

** Section #17 '.rel.text.LPUART4_IRQHandler' (SHT_REL)
    Size   : 96 bytes (alignment 4)
    Symbol table #54 '.symtab'
    12 relocations applied to section #16 '.text.LPUART4_IRQHandler'


** Section #18 '.ARM.exidx.text.LPUART4_IRQHandler' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #16 '.text.LPUART4_IRQHandler'


** Section #19 '.rel.ARM.exidx.text.LPUART4_IRQHandler' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #54 '.symtab'
    1 relocations applied to section #18 '.ARM.exidx.text.LPUART4_IRQHandler'


** Section #20 '.text.fputc' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 86 bytes (alignment 4)
    Address: 0x00000000

    $t.6
    [Anonymous symbol #308]
    fputc
        0x00000000:    b083        ..      SUB      sp,sp,#0xc
        0x00000002:    9002        ..      STR      r0,[sp,#8]
        0x00000004:    9101        ..      STR      r1,[sp,#4]
        0x00000006:    e7ff        ..      B        {pc}+0x2 ; 0x8
        0x00000008:    f2460004    F...    MOV      r0,#0x6004
        0x0000000c:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000010:    6800        .h      LDR      r0,[r0,#0]
        0x00000012:    2100        .!      MOVS     r1,#0
        0x00000014:    0200        ..      LSLS     r0,r0,#8
        0x00000016:    2800        .(      CMP      r0,#0
        0x00000018:    9100        ..      STR      r1,[sp,#0]
        0x0000001a:    d40c        ..      BMI      {pc}+0x1c ; 0x36
        0x0000001c:    e7ff        ..      B        {pc}+0x2 ; 0x1e
        0x0000001e:    f2460004    F...    MOV      r0,#0x6004
        0x00000022:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000026:    6800        .h      LDR      r0,[r0,#0]
        0x00000028:    f4000080    ....    AND      r0,r0,#0x400000
        0x0000002c:    2101        .!      MOVS     r1,#1
        0x0000002e:    ea815090    ...P    EOR      r0,r1,r0,LSR #22
        0x00000032:    9000        ..      STR      r0,[sp,#0]
        0x00000034:    e7ff        ..      B        {pc}+0x2 ; 0x36
        0x00000036:    9800        ..      LDR      r0,[sp,#0]
        0x00000038:    07c0        ..      LSLS     r0,r0,#31
        0x0000003a:    2800        .(      CMP      r0,#0
        0x0000003c:    d001        ..      BEQ      {pc}+0x6 ; 0x42
        0x0000003e:    e7ff        ..      B        {pc}+0x2 ; 0x40
        0x00000040:    e7e2        ..      B        {pc}-0x38 ; 0x8
        0x00000042:    f89d0008    ....    LDRB     r0,[sp,#8]
        0x00000046:    f246010c    F...    MOV      r1,#0x600c
        0x0000004a:    f2c4010d    ....    MOVT     r1,#0x400d
        0x0000004e:    6008        .`      STR      r0,[r1,#0]
        0x00000050:    9802        ..      LDR      r0,[sp,#8]
        0x00000052:    b003        ..      ADD      sp,sp,#0xc
        0x00000054:    4770        pG      BX       lr

** Section #21 '.ARM.exidx.text.fputc' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #20 '.text.fputc'


** Section #22 '.rel.ARM.exidx.text.fputc' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #54 '.symtab'
    1 relocations applied to section #21 '.ARM.exidx.text.fputc'


** Section #23 '.text.fgetc' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 42 bytes (alignment 4)
    Address: 0x00000000

    $t.7
    [Anonymous symbol #309]
    fgetc
        0x00000000:    b081        ..      SUB      sp,sp,#4
        0x00000002:    9000        ..      STR      r0,[sp,#0]
        0x00000004:    e7ff        ..      B        {pc}+0x2 ; 0x6
        0x00000006:    f2460004    F...    MOV      r0,#0x6004
        0x0000000a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000000e:    6800        .h      LDR      r0,[r0,#0]
        0x00000010:    0280        ..      LSLS     r0,r0,#10
        0x00000012:    2800        .(      CMP      r0,#0
        0x00000014:    d401        ..      BMI      {pc}+0x6 ; 0x1a
        0x00000016:    e7ff        ..      B        {pc}+0x2 ; 0x18
        0x00000018:    e7f5        ..      B        {pc}-0x12 ; 0x6
        0x0000001a:    f246000c    F...    MOV      r0,#0x600c
        0x0000001e:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000022:    6800        .h      LDR      r0,[r0,#0]
        0x00000024:    b2c0        ..      UXTB     r0,r0
        0x00000026:    b001        ..      ADD      sp,sp,#4
        0x00000028:    4770        pG      BX       lr

** Section #24 '.ARM.exidx.text.fgetc' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #23 '.text.fgetc'


** Section #25 '.rel.ARM.exidx.text.fgetc' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #54 '.symtab'
    1 relocations applied to section #24 '.ARM.exidx.text.fgetc'


** Section #26 '.text.OBLEDs_init' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 116 bytes (alignment 4)
    Address: 0x00000000

    $t.8
    [Anonymous symbol #310]
    OBLEDs_init
        0x00000000:    f2480038    H.8.    MOV      r0,#0x8038
        0x00000004:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000008:    6801        .h      LDR      r1,[r0,#0]
        0x0000000a:    f4416100    A..a    ORR      r1,r1,#0x800
        0x0000000e:    6001        .`      STR      r1,[r0,#0]
        0x00000010:    f24b0020    K. .    MOV      r0,#0xb020
        0x00000014:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000018:    f44f7180    O..q    MOV      r1,#0x100
        0x0000001c:    6001        .`      STR      r1,[r0,#0]
        0x0000001e:    f24b0024    K.$.    MOV      r0,#0xb024
        0x00000022:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000026:    6001        .`      STR      r1,[r0,#0]
        0x00000028:    f24b0028    K.(.    MOV      r0,#0xb028
        0x0000002c:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000030:    6001        .`      STR      r1,[r0,#0]
        0x00000032:    f24f0094    O...    MOV      r0,#0xf094
        0x00000036:    f2c4000f    ....    MOVT     r0,#0x400f
        0x0000003a:    6801        .h      LDR      r1,[r0,#0]
        0x0000003c:    f4417180    A..q    ORR      r1,r1,#0x100
        0x00000040:    6001        .`      STR      r1,[r0,#0]
        0x00000042:    6801        .h      LDR      r1,[r0,#0]
        0x00000044:    f4417100    A..q    ORR      r1,r1,#0x200
        0x00000048:    6001        .`      STR      r1,[r0,#0]
        0x0000004a:    6801        .h      LDR      r1,[r0,#0]
        0x0000004c:    f4416180    A..a    ORR      r1,r1,#0x400
        0x00000050:    6001        .`      STR      r1,[r0,#0]
        0x00000052:    f24f0084    O...    MOV      r0,#0xf084
        0x00000056:    f2c4000f    ....    MOVT     r0,#0x400f
        0x0000005a:    6801        .h      LDR      r1,[r0,#0]
        0x0000005c:    f4417180    A..q    ORR      r1,r1,#0x100
        0x00000060:    6001        .`      STR      r1,[r0,#0]
        0x00000062:    6801        .h      LDR      r1,[r0,#0]
        0x00000064:    f4417100    A..q    ORR      r1,r1,#0x200
        0x00000068:    6001        .`      STR      r1,[r0,#0]
        0x0000006a:    6801        .h      LDR      r1,[r0,#0]
        0x0000006c:    f4416180    A..a    ORR      r1,r1,#0x400
        0x00000070:    6001        .`      STR      r1,[r0,#0]
        0x00000072:    4770        pG      BX       lr

** Section #27 '.ARM.exidx.text.OBLEDs_init' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #26 '.text.OBLEDs_init'


** Section #28 '.rel.ARM.exidx.text.OBLEDs_init' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #54 '.symtab'
    1 relocations applied to section #27 '.ARM.exidx.text.OBLEDs_init'


** Section #29 '.text.FTM0_IRQHandler' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 2 bytes (alignment 4)
    Address: 0x00000000

    $t.9
    [Anonymous symbol #311]
    FTM0_IRQHandler
        0x00000000:    4770        pG      BX       lr

** Section #30 '.ARM.exidx.text.FTM0_IRQHandler' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #29 '.text.FTM0_IRQHandler'


** Section #31 '.rel.ARM.exidx.text.FTM0_IRQHandler' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #54 '.symtab'
    1 relocations applied to section #30 '.ARM.exidx.text.FTM0_IRQHandler'


** Section #32 '.text.main' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 404 bytes (alignment 4)
    Address: 0x00000000

    $t.10
    [Anonymous symbol #312]
    main
        0x00000000:    b580        ..      PUSH     {r7,lr}
        0x00000002:    b084        ..      SUB      sp,sp,#0x10
        0x00000004:    f44f30e1    O..0    MOV      r0,#0x1c200
        0x00000008:    f7fffffe    ....    BL       Debug_init_uart ; 0x0 Section #3
        0x0000000c:    f7fffffe    ....    BL       OBLEDs_init ; 0x0 Section #26
        0x00000010:    f2480038    H.8.    MOV      r0,#0x8038
        0x00000014:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000018:    6801        .h      LDR      r1,[r0,#0]
        0x0000001a:    f4417100    A..q    ORR      r1,r1,#0x200
        0x0000001e:    6001        .`      STR      r1,[r0,#0]
        0x00000020:    6801        .h      LDR      r1,[r0,#0]
        0x00000022:    f4416100    A..a    ORR      r1,r1,#0x800
        0x00000026:    6001        .`      STR      r1,[r0,#0]
        0x00000028:    f2490104    I...    MOV      r1,#0x9004
        0x0000002c:    f2c40104    ....    MOVT     r1,#0x4004
        0x00000030:    f44f6280    O..b    MOV      r2,#0x400
        0x00000034:    600a        .`      STR      r2,[r1,#0]
        0x00000036:    f2490108    I...    MOV      r1,#0x9008
        0x0000003a:    f2c40104    ....    MOVT     r1,#0x4004
        0x0000003e:    600a        .`      STR      r2,[r1,#0]
        0x00000040:    f24b0134    K.4.    MOV      r1,#0xb034
        0x00000044:    f2c40104    ....    MOVT     r1,#0x4004
        0x00000048:    f44f7380    O..s    MOV      r3,#0x100
        0x0000004c:    600b        .`      STR      r3,[r1,#0]
        0x0000004e:    f24f0194    O...    MOV      r1,#0xf094
        0x00000052:    f2c4010f    ....    MOVT     r1,#0x400f
        0x00000056:    680b        .h      LDR      r3,[r1,#0]
        0x00000058:    f043030d    C...    ORR      r3,r3,#0xd
        0x0000005c:    600b        .`      STR      r3,[r1,#0]
        0x0000005e:    f248013c    H.<.    MOV      r1,#0x803c
        0x00000062:    f2c40104    ....    MOVT     r1,#0x4004
        0x00000066:    680b        .h      LDR      r3,[r1,#0]
        0x00000068:    f0437380    C..s    ORR      r3,r3,#0x1000000
        0x0000006c:    600b        .`      STR      r3,[r1,#0]
        0x0000006e:    6801        .h      LDR      r1,[r0,#0]
        0x00000070:    f4416100    A..a    ORR      r1,r1,#0x800
        0x00000074:    6001        .`      STR      r1,[r0,#0]
        0x00000076:    f24b000c    K...    MOV      r0,#0xb00c
        0x0000007a:    f2c40004    ....    MOVT     r0,#0x4004
        0x0000007e:    6002        .`      STR      r2,[r0,#0]
        0x00000080:    f2480084    H...    MOV      r0,#0x8084
        0x00000084:    f2c40003    ....    MOVT     r0,#0x4003
        0x00000088:    21c0        .!      MOVS     r1,#0xc0
        0x0000008a:    6001        .`      STR      r1,[r0,#0]
        0x0000008c:    f2480074    H.t.    MOV      r0,#0x8074
        0x00000090:    f2c40003    ....    MOVT     r0,#0x4003
        0x00000094:    2100        .!      MOVS     r1,#0
        0x00000096:    6001        .`      STR      r1,[r0,#0]
        0x00000098:    f2480000    H...    MOVW     r0,#0x8000
        0x0000009c:    f2c40003    ....    MOVT     r0,#0x4003
        0x000000a0:    6001        .`      STR      r1,[r0,#0]
        0x000000a2:    f2480204    H...    MOV      r2,#0x8004
        0x000000a6:    f2c40203    ....    MOVT     r2,#0x4003
        0x000000aa:    6011        .`      STR      r1,[r2,#0]
        0x000000ac:    f6430280    C...    MOVW     r2,#0x3880
        0x000000b0:    f2c00201    ....    MOVT     r2,#1
        0x000000b4:    9203        ..      STR      r2,[sp,#0xc]
        0x000000b6:    9a03        ..      LDR      r2,[sp,#0xc]
        0x000000b8:    f2400300    @...    MOVW     r3,#:LOWER16: .L.str
        0x000000bc:    f2c00300    ....    MOVT     r3,#:UPPER16: .L.str
        0x000000c0:    9001        ..      STR      r0,[sp,#4]
        0x000000c2:    4618        .F      MOV      r0,r3
        0x000000c4:    9100        ..      STR      r1,[sp,#0]
        0x000000c6:    4611        .F      MOV      r1,r2
        0x000000c8:    f7fffffe    ....    BL       printf
        0x000000cc:    9903        ..      LDR      r1,[sp,#0xc]
        0x000000ce:    3901        .9      SUBS     r1,#1
        0x000000d0:    f2480208    H...    MOV      r2,#0x8008
        0x000000d4:    f2c40203    ....    MOVT     r2,#0x4003
        0x000000d8:    6011        .`      STR      r1,[r2,#0]
        0x000000da:    2108        .!      MOVS     r1,#8
        0x000000dc:    9a01        ..      LDR      r2,[sp,#4]
        0x000000de:    6011        .`      STR      r1,[r2,#0]
        0x000000e0:    f2480154    H.T.    MOV      r1,#0x8054
        0x000000e4:    f2c40103    ....    MOVT     r1,#0x4003
        0x000000e8:    680b        .h      LDR      r3,[r1,#0]
        0x000000ea:    f0430304    C...    ORR      r3,r3,#4
        0x000000ee:    600b        .`      STR      r3,[r1,#0]
        0x000000f0:    f2480114    H...    MOV      r1,#0x8014
        0x000000f4:    f2c40103    ....    MOVT     r1,#0x4003
        0x000000f8:    2349        I#      MOVS     r3,#0x49
        0x000000fa:    600b        .`      STR      r3,[r1,#0]
        0x000000fc:    9903        ..      LDR      r1,[sp,#0xc]
        0x000000fe:    23fa        .#      MOVS     r3,#0xfa
        0x00000100:    4359        YC      MULS     r1,r3,r1
        0x00000102:    0a09        ..      LSRS     r1,r1,#8
        0x00000104:    f2480318    H...    MOV      r3,#0x8018
        0x00000108:    f2c40303    ....    MOVT     r3,#0x4003
        0x0000010c:    6019        .`      STR      r1,[r3,#0]
        0x0000010e:    f248011c    H...    MOV      r1,#0x801c
        0x00000112:    f2c40103    ....    MOVT     r1,#0x4003
        0x00000116:    2328        (#      MOVS     r3,#0x28
        0x00000118:    600b        .`      STR      r3,[r1,#0]
        0x0000011a:    f2480120    H. .    MOV      r1,#0x8020
        0x0000011e:    f2c40103    ....    MOVT     r1,#0x4003
        0x00000122:    f44f737a    O.zs    MOV      r3,#0x3e8
        0x00000126:    600b        .`      STR      r3,[r1,#0]
        0x00000128:    9900        ..      LDR      r1,[sp,#0]
        0x0000012a:    9102        ..      STR      r1,[sp,#8]
        0x0000012c:    e7ff        ..      B        {pc}+0x2 ; 0x12e
        0x0000012e:    f2400000    @...    MOVW     r0,#:LOWER16: SystemCoreClock
        0x00000132:    f2c00000    ....    MOVT     r0,#:UPPER16: SystemCoreClock
        0x00000136:    6801        .h      LDR      r1,[r0,#0]
        0x00000138:    f2400000    @...    MOVW     r0,#:LOWER16: .L.str.1
        0x0000013c:    f2c00000    ....    MOVT     r0,#:UPPER16: .L.str.1
        0x00000140:    f7fffffe    ....    BL       printf
        0x00000144:    9902        ..      LDR      r1,[sp,#8]
        0x00000146:    29fa        .)      CMP      r1,#0xfa
        0x00000148:    d109        ..      BNE      {pc}+0x16 ; 0x15e
        0x0000014a:    e7ff        ..      B        {pc}+0x2 ; 0x14c
        0x0000014c:    f24f0084    O...    MOV      r0,#0xf084
        0x00000150:    f2c4000f    ....    MOVT     r0,#0x400f
        0x00000154:    6801        .h      LDR      r1,[r0,#0]
        0x00000156:    f4416180    A..a    ORR      r1,r1,#0x400
        0x0000015a:    6001        .`      STR      r1,[r0,#0]
        0x0000015c:    e7ff        ..      B        {pc}+0x2 ; 0x15e
        0x0000015e:    9802        ..      LDR      r0,[sp,#8]
        0x00000160:    f5b07ffa    ....    CMP      r0,#0x1f4
        0x00000164:    d109        ..      BNE      {pc}+0x16 ; 0x17a
        0x00000166:    e7ff        ..      B        {pc}+0x2 ; 0x168
        0x00000168:    f24f0088    O...    MOV      r0,#0xf088
        0x0000016c:    f2c4000f    ....    MOVT     r0,#0x400f
        0x00000170:    6801        .h      LDR      r1,[r0,#0]
        0x00000172:    f4416180    A..a    ORR      r1,r1,#0x400
        0x00000176:    6001        .`      STR      r1,[r0,#0]
        0x00000178:    e008        ..      B        {pc}+0x14 ; 0x18c
        0x0000017a:    9802        ..      LDR      r0,[sp,#8]
        0x0000017c:    f5b07f7a    ..z.    CMP      r0,#0x3e8
        0x00000180:    d103        ..      BNE      {pc}+0xa ; 0x18a
        0x00000182:    e7ff        ..      B        {pc}+0x2 ; 0x184
        0x00000184:    2000        .       MOVS     r0,#0
        0x00000186:    9002        ..      STR      r0,[sp,#8]
        0x00000188:    e7ff        ..      B        {pc}+0x2 ; 0x18a
        0x0000018a:    e7ff        ..      B        {pc}+0x2 ; 0x18c
        0x0000018c:    9802        ..      LDR      r0,[sp,#8]
        0x0000018e:    3001        .0      ADDS     r0,#1
        0x00000190:    9002        ..      STR      r0,[sp,#8]
        0x00000192:    e7cc        ..      B        {pc}-0x64 ; 0x12e

** Section #33 '.rel.text.main' (SHT_REL)
    Size   : 80 bytes (alignment 4)
    Symbol table #54 '.symtab'
    10 relocations applied to section #32 '.text.main'


** Section #34 '.ARM.exidx.text.main' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #32 '.text.main'


** Section #35 '.rel.ARM.exidx.text.main' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #54 '.symtab'
    1 relocations applied to section #34 '.ARM.exidx.text.main'


** Section #36 '.bss.transmitQueue' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 262 bytes (alignment 2)
    Address: 0x00000000


** Section #37 '.bss.receiveQueue' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 262 bytes (alignment 2)
    Address: 0x00000000


** Section #38 '.rodata.str1.1' (SHT_PROGBITS) [SHF_ALLOC + SHF_MERGE + SHF_STRINGS]
    Size   : 38 bytes
    Address: 0x00000000


** Section #39 '.bss.__stdout' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 4 bytes (alignment 4)
    Address: 0x00000000


** Section #40 '.bss.__stdin' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 4 bytes (alignment 4)
    Address: 0x00000000


** Section #41 '.debug_str' (SHT_PROGBITS) [SHF_MERGE + SHF_STRINGS]
    Size   : 2943 bytes


** Section #42 '.debug_abbrev' (SHT_PROGBITS)
    Size   : 429 bytes


** Section #43 '.debug_info' (SHT_PROGBITS)
    Size   : 3394 bytes


** Section #44 '.rel.debug_info' (SHT_REL)
    Size   : 2464 bytes (alignment 4)
    Symbol table #54 '.symtab'
    308 relocations applied to section #43 '.debug_info'


** Section #45 '.debug_ranges' (SHT_PROGBITS)
    Size   : 88 bytes


** Section #46 '.rel.debug_ranges' (SHT_REL)
    Size   : 160 bytes (alignment 4)
    Symbol table #54 '.symtab'
    20 relocations applied to section #45 '.debug_ranges'


** Section #47 '.comment' (SHT_PROGBITS) [SHF_MERGE + SHF_STRINGS]
    Size   : 56 bytes


** Section #48 '.note.GNU-stack' (SHT_PROGBITS)
    Size   : 0 bytes


** Section #49 '.ARM.attributes' (SHT_ARM_ATTRIBUTES)
    Size   : 88 bytes


** Section #50 '.debug_frame' (SHT_PROGBITS)
    Size   : 236 bytes (alignment 4)


** Section #51 '.rel.debug_frame' (SHT_REL)
    Size   : 160 bytes (alignment 4)
    Symbol table #54 '.symtab'
    20 relocations applied to section #50 '.debug_frame'


** Section #52 '.debug_line' (SHT_PROGBITS)
    Size   : 1222 bytes


** Section #53 '.rel.debug_line' (SHT_REL)
    Size   : 80 bytes (alignment 4)
    Symbol table #54 '.symtab'
    10 relocations applied to section #52 '.debug_line'


** Section #54 '.symtab' (SHT_SYMTAB)
    Size   : 5408 bytes (alignment 4)
    String table #1 '.strtab'
    Last local symbol no. 318


