
========================================================================

** ELF Header Information

    File Name: K82F_FlightController.o

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    Operating System ABI: none
    ABI Version: 0
    File Type: ET_REL (Relocatable object) (1)
    Machine: EM_ARM (ARM)

    Entry offset (in SHF_ENTRYSECT section): 0x00000000
    Flags: None (0x05000000)

    ARM ELF revision: 5 (ABI version 2)

    Header size: 52 bytes (0x34)
    Program header entry size: 0 bytes (0x0)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 0
    Section header entries: 62

    Program header offset: 0 (0x00000000)
    Section header offset: 28572 (0x00006f9c)

    Section header string table index: 1

========================================================================

** Section #1 '.strtab' (SHT_STRTAB)
    Size   : 1279 bytes


** Section #2 '.text' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 0 bytes (alignment 4)
    Address: 0x00000000


** Section #3 '.text.Debug_init_uart' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 336 bytes (alignment 8)
    Address: 0x00000000

    $t.0
    [Anonymous symbol #419]
    Debug_init_uart
        0x00000000:    b580        ..      PUSH     {r7,lr}
        0x00000002:    b086        ..      SUB      sp,sp,#0x18
        0x00000004:    9005        ..      STR      r0,[sp,#0x14]
        0x00000006:    f2480038    H.8.    MOV      r0,#0x8038
        0x0000000a:    f2c40004    ....    MOVT     r0,#0x4004
        0x0000000e:    6801        .h      LDR      r1,[r0,#0]
        0x00000010:    f4416100    A..a    ORR      r1,r1,#0x800
        0x00000014:    6001        .`      STR      r1,[r0,#0]
        0x00000016:    f248002c    H.,.    MOV      r0,#0x802c
        0x0000001a:    f2c40004    ....    MOVT     r0,#0x4004
        0x0000001e:    6801        .h      LDR      r1,[r0,#0]
        0x00000020:    f4410180    A...    ORR      r1,r1,#0x400000
        0x00000024:    6001        .`      STR      r1,[r0,#0]
        0x00000026:    f2460008    F...    MOV      r0,#0x6008
        0x0000002a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000002e:    6801        .h      LDR      r1,[r0,#0]
        0x00000030:    f4212140    !.@!    BIC      r1,r1,#0xc0000
        0x00000034:    6001        .`      STR      r1,[r0,#0]
        0x00000036:    f2480104    H...    MOV      r1,#0x8004
        0x0000003a:    f2c40104    ....    MOVT     r1,#0x4004
        0x0000003e:    680a        .h      LDR      r2,[r1,#0]
        0x00000040:    f0426280    B..b    ORR      r2,r2,#0x4000000
        0x00000044:    600a        .`      STR      r2,[r1,#0]
        0x00000046:    680a        .h      LDR      r2,[r1,#0]
        0x00000048:    f4423240    B.@2    ORR      r2,r2,#0x30000
        0x0000004c:    600a        .`      STR      r2,[r1,#0]
        0x0000004e:    f24b0138    K.8.    MOV      r1,#0xb038
        0x00000052:    f2c40104    ....    MOVT     r1,#0x4004
        0x00000056:    f44f7240    O.@r    MOV      r2,#0x300
        0x0000005a:    600a        .`      STR      r2,[r1,#0]
        0x0000005c:    f24b013c    K.<.    MOV      r1,#0xb03c
        0x00000060:    f2c40104    ....    MOVT     r1,#0x4004
        0x00000064:    600a        .`      STR      r2,[r1,#0]
        0x00000066:    9905        ..      LDR      r1,[sp,#0x14]
        0x00000068:    0109        ..      LSLS     r1,r1,#4
        0x0000006a:    9003        ..      STR      r0,[sp,#0xc]
        0x0000006c:    4608        .F      MOV      r0,r1
        0x0000006e:    f7fffffe    ....    BL       __aeabi_ui2d
        0x00000072:    ec410b10    A...    VMOV     d0,r0,r1
        0x00000076:    ed9f1b34    ..4.    VLDR     d1,[pc,#208] ; [0x148] = 0
        0x0000007a:    ec510b11    Q...    VMOV     r0,r1,d1
        0x0000007e:    ec532b10    S..+    VMOV     r2,r3,d0
        0x00000082:    f7fffffe    ....    BL       __aeabi_ddiv
        0x00000086:    ec410b10    A...    VMOV     d0,r0,r1
        0x0000008a:    ec510b10    Q...    VMOV     r0,r1,d0
        0x0000008e:    f7fffffe    ....    BL       __aeabi_d2iz
        0x00000092:    f8ad0010    ....    STRH     r0,[sp,#0x10]
        0x00000096:    f2460000    F...    MOVW     r0,#0x6000
        0x0000009a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000009e:    6801        .h      LDR      r1,[r0,#0]
        0x000000a0:    f64172ff    A..r    MOV      r2,#0x1fff
        0x000000a4:    4391        .C      BICS     r1,r1,r2
        0x000000a6:    6001        .`      STR      r1,[r0,#0]
        0x000000a8:    f8bd1010    ....    LDRH     r1,[sp,#0x10]
        0x000000ac:    f36f315f    o._1    BFC      r1,#13,#19
        0x000000b0:    6802        .h      LDR      r2,[r0,#0]
        0x000000b2:    4311        .C      ORRS     r1,r1,r2
        0x000000b4:    6001        .`      STR      r1,[r0,#0]
        0x000000b6:    6801        .h      LDR      r1,[r0,#0]
        0x000000b8:    f0416170    A.pa    ORR      r1,r1,#0xf000000
        0x000000bc:    6001        .`      STR      r1,[r0,#0]
        0x000000be:    6801        .h      LDR      r1,[r0,#0]
        0x000000c0:    6001        .`      STR      r1,[r0,#0]
        0x000000c2:    2000        .       MOVS     r0,#0
        0x000000c4:    9903        ..      LDR      r1,[sp,#0xc]
        0x000000c6:    6008        .`      STR      r0,[r1,#0]
        0x000000c8:    6008        .`      STR      r0,[r1,#0]
        0x000000ca:    f2460004    F...    MOV      r0,#0x6004
        0x000000ce:    f2c4000d    ....    MOVT     r0,#0x400d
        0x000000d2:    f44f2270    O.p"    MOV      r2,#0xf0000
        0x000000d6:    6002        .`      STR      r2,[r0,#0]
        0x000000d8:    6802        .h      LDR      r2,[r0,#0]
        0x000000da:    f4422270    B.p"    ORR      r2,r2,#0xf0000
        0x000000de:    6002        .`      STR      r2,[r0,#0]
        0x000000e0:    6802        .h      LDR      r2,[r0,#0]
        0x000000e2:    6002        .`      STR      r2,[r0,#0]
        0x000000e4:    f2400200    @...    MOVW     r2,#:LOWER16: transmitQueue
        0x000000e8:    f2c00200    ....    MOVT     r2,#:UPPER16: transmitQueue
        0x000000ec:    9002        ..      STR      r0,[sp,#8]
        0x000000ee:    4610        .F      MOV      r0,r2
        0x000000f0:    f7fffffe    ....    BL       RingBuffer_Init
        0x000000f4:    f2400000    @...    MOVW     r0,#:LOWER16: receiveQueue
        0x000000f8:    f2c00000    ....    MOVT     r0,#:UPPER16: receiveQueue
        0x000000fc:    f7fffffe    ....    BL       RingBuffer_Init
        0x00000100:    2022        "       MOVS     r0,#0x22
        0x00000102:    2102        .!      MOVS     r1,#2
        0x00000104:    9001        ..      STR      r0,[sp,#4]
        0x00000106:    f7fffffe    ....    BL       __NVIC_SetPriority ; 0x0 Section #7
        0x0000010a:    9801        ..      LDR      r0,[sp,#4]
        0x0000010c:    f7fffffe    ....    BL       __NVIC_ClearPendingIRQ ; 0x0 Section #10
        0x00000110:    9801        ..      LDR      r0,[sp,#4]
        0x00000112:    f7fffffe    ....    BL       __NVIC_EnableIRQ ; 0x0 Section #13
        0x00000116:    9803        ..      LDR      r0,[sp,#0xc]
        0x00000118:    6801        .h      LDR      r1,[r0,#0]
        0x0000011a:    f4411100    A...    ORR      r1,r1,#0x200000
        0x0000011e:    6001        .`      STR      r1,[r0,#0]
        0x00000120:    6801        .h      LDR      r1,[r0,#0]
        0x00000122:    f4412140    A.@!    ORR      r1,r1,#0xc0000
        0x00000126:    6001        .`      STR      r1,[r0,#0]
        0x00000128:    f246010c    F...    MOV      r1,#0x600c
        0x0000012c:    f2c4010d    ....    MOVT     r1,#0x400d
        0x00000130:    6809        .h      LDR      r1,[r1,#0]
        0x00000132:    f88d1013    ....    STRB     r1,[sp,#0x13]
        0x00000136:    9902        ..      LDR      r1,[sp,#8]
        0x00000138:    680a        .h      LDR      r2,[r1,#0]
        0x0000013a:    f4221200    "...    BIC      r2,r2,#0x200000
        0x0000013e:    600a        .`      STR      r2,[r1,#0]
        0x00000140:    b006        ..      ADD      sp,sp,#0x18
        0x00000142:    bd80        ..      POP      {r7,pc}
        0x00000144:    bf00        ..      NOP      
        0x00000146:    bf00        ..      NOP      
    $d.1
        0x00000148:    00000000    ....    DCD    0
        0x0000014c:    4186e360    `..A    DCD    1099359072

** Section #4 '.rel.text.Debug_init_uart' (SHT_REL)
    Size   : 96 bytes (alignment 4)
    Symbol table #61 '.symtab'
    12 relocations applied to section #3 '.text.Debug_init_uart'


** Section #5 '.ARM.exidx.text.Debug_init_uart' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #3 '.text.Debug_init_uart'


** Section #6 '.rel.ARM.exidx.text.Debug_init_uart' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #5 '.ARM.exidx.text.Debug_init_uart'


** Section #7 '.text.__NVIC_SetPriority' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 68 bytes (alignment 4)
    Address: 0x00000000

    $t.2
    __NVIC_SetPriority
    [Anonymous symbol #420]
        0x00000000:    b082        ..      SUB      sp,sp,#8
        0x00000002:    4602        .F      MOV      r2,r0
        0x00000004:    f88d0007    ....    STRB     r0,[sp,#7]
        0x00000008:    9100        ..      STR      r1,[sp,#0]
        0x0000000a:    f99d0007    ....    LDRSB    r0,[sp,#7]
        0x0000000e:    2800        .(      CMP      r0,#0
        0x00000010:    d40a        ..      BMI      {pc}+0x18 ; 0x28
        0x00000012:    e7ff        ..      B        {pc}+0x2 ; 0x14
        0x00000014:    9800        ..      LDR      r0,[sp,#0]
        0x00000016:    0100        ..      LSLS     r0,r0,#4
        0x00000018:    f99d1007    ....    LDRSB    r1,[sp,#7]
        0x0000001c:    f24e4200    N..B    MOVW     r2,#0xe400
        0x00000020:    f2ce0200    ....    MOVT     r2,#0xe000
        0x00000024:    5488        .T      STRB     r0,[r1,r2]
        0x00000026:    e00b        ..      B        {pc}+0x1a ; 0x40
        0x00000028:    9800        ..      LDR      r0,[sp,#0]
        0x0000002a:    0100        ..      LSLS     r0,r0,#4
        0x0000002c:    f89d1007    ....    LDRB     r1,[sp,#7]
        0x00000030:    f001010f    ....    AND      r1,r1,#0xf
        0x00000034:    f64e5214    N..R    MOV      r2,#0xed14
        0x00000038:    f2ce0200    ....    MOVT     r2,#0xe000
        0x0000003c:    5488        .T      STRB     r0,[r1,r2]
        0x0000003e:    e7ff        ..      B        {pc}+0x2 ; 0x40
        0x00000040:    b002        ..      ADD      sp,sp,#8
        0x00000042:    4770        pG      BX       lr

** Section #8 '.ARM.exidx.text.__NVIC_SetPriority' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #7 '.text.__NVIC_SetPriority'


** Section #9 '.rel.ARM.exidx.text.__NVIC_SetPriority' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #8 '.ARM.exidx.text.__NVIC_SetPriority'


** Section #10 '.text.__NVIC_ClearPendingIRQ' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 52 bytes (alignment 4)
    Address: 0x00000000

    $t.3
    __NVIC_ClearPendingIRQ
    [Anonymous symbol #421]
        0x00000000:    b081        ..      SUB      sp,sp,#4
        0x00000002:    4601        .F      MOV      r1,r0
        0x00000004:    f88d0003    ....    STRB     r0,[sp,#3]
        0x00000008:    f99d0003    ....    LDRSB    r0,[sp,#3]
        0x0000000c:    2800        .(      CMP      r0,#0
        0x0000000e:    d40f        ..      BMI      {pc}+0x22 ; 0x30
        0x00000010:    e7ff        ..      B        {pc}+0x2 ; 0x12
        0x00000012:    f99d0003    ....    LDRSB    r0,[sp,#3]
        0x00000016:    f000011f    ....    AND      r1,r0,#0x1f
        0x0000001a:    2201        ."      MOVS     r2,#1
        0x0000001c:    fa02f101    ....    LSL      r1,r2,r1
        0x00000020:    0940        @.      LSRS     r0,r0,#5
        0x00000022:    f24e2280    N.."    MOV      r2,#0xe280
        0x00000026:    f2ce0200    ....    MOVT     r2,#0xe000
        0x0000002a:    f8421020    B. .    STR      r1,[r2,r0,LSL #2]
        0x0000002e:    e7ff        ..      B        {pc}+0x2 ; 0x30
        0x00000030:    b001        ..      ADD      sp,sp,#4
        0x00000032:    4770        pG      BX       lr

** Section #11 '.ARM.exidx.text.__NVIC_ClearPendingIRQ' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #10 '.text.__NVIC_ClearPendingIRQ'


** Section #12 '.rel.ARM.exidx.text.__NVIC_ClearPendingIRQ' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #11 '.ARM.exidx.text.__NVIC_ClearPendingIRQ'


** Section #13 '.text.__NVIC_EnableIRQ' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 52 bytes (alignment 4)
    Address: 0x00000000

    $t.4
    __NVIC_EnableIRQ
    [Anonymous symbol #422]
        0x00000000:    b081        ..      SUB      sp,sp,#4
        0x00000002:    4601        .F      MOV      r1,r0
        0x00000004:    f88d0003    ....    STRB     r0,[sp,#3]
        0x00000008:    f99d0003    ....    LDRSB    r0,[sp,#3]
        0x0000000c:    2800        .(      CMP      r0,#0
        0x0000000e:    d40f        ..      BMI      {pc}+0x22 ; 0x30
        0x00000010:    e7ff        ..      B        {pc}+0x2 ; 0x12
        0x00000012:    f99d0003    ....    LDRSB    r0,[sp,#3]
        0x00000016:    f000011f    ....    AND      r1,r0,#0x1f
        0x0000001a:    2201        ."      MOVS     r2,#1
        0x0000001c:    fa02f101    ....    LSL      r1,r2,r1
        0x00000020:    0940        @.      LSRS     r0,r0,#5
        0x00000022:    f24e1200    N...    MOVW     r2,#0xe100
        0x00000026:    f2ce0200    ....    MOVT     r2,#0xe000
        0x0000002a:    f8421020    B. .    STR      r1,[r2,r0,LSL #2]
        0x0000002e:    e7ff        ..      B        {pc}+0x2 ; 0x30
        0x00000030:    b001        ..      ADD      sp,sp,#4
        0x00000032:    4770        pG      BX       lr

** Section #14 '.ARM.exidx.text.__NVIC_EnableIRQ' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #13 '.text.__NVIC_EnableIRQ'


** Section #15 '.rel.ARM.exidx.text.__NVIC_EnableIRQ' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #14 '.ARM.exidx.text.__NVIC_EnableIRQ'


** Section #16 '.text.LPUART4_IRQHandler' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 228 bytes (alignment 4)
    Address: 0x00000000

    $t.5
    [Anonymous symbol #423]
    LPUART4_IRQHandler
        0x00000000:    b580        ..      PUSH     {r7,lr}
        0x00000002:    b082        ..      SUB      sp,sp,#8
        0x00000004:    f2460004    F...    MOV      r0,#0x6004
        0x00000008:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000000c:    6800        .h      LDR      r0,[r0,#0]
        0x0000000e:    f4102f70    ..p/    TST      r0,#0xf0000
        0x00000012:    d010        ..      BEQ      {pc}+0x24 ; 0x36
        0x00000014:    e7ff        ..      B        {pc}+0x2 ; 0x16
        0x00000016:    f2460004    F...    MOV      r0,#0x6004
        0x0000001a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000001e:    6801        .h      LDR      r1,[r0,#0]
        0x00000020:    f4412170    A.p!    ORR      r1,r1,#0xf0000
        0x00000024:    6001        .`      STR      r1,[r0,#0]
        0x00000026:    f246000c    F...    MOV      r0,#0x600c
        0x0000002a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000002e:    6800        .h      LDR      r0,[r0,#0]
        0x00000030:    f88d0007    ....    STRB     r0,[sp,#7]
        0x00000034:    e7ff        ..      B        {pc}+0x2 ; 0x36
        0x00000036:    f2460004    F...    MOV      r0,#0x6004
        0x0000003a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000003e:    6800        .h      LDR      r0,[r0,#0]
        0x00000040:    0280        ..      LSLS     r0,r0,#10
        0x00000042:    2800        .(      CMP      r0,#0
        0x00000044:    d51b        ..      BPL      {pc}+0x3a ; 0x7e
        0x00000046:    e7ff        ..      B        {pc}+0x2 ; 0x48
        0x00000048:    f246000c    F...    MOV      r0,#0x600c
        0x0000004c:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000050:    6800        .h      LDR      r0,[r0,#0]
        0x00000052:    f88d0007    ....    STRB     r0,[sp,#7]
        0x00000056:    f2400000    @...    MOVW     r0,#:LOWER16: receiveQueue
        0x0000005a:    f2c00000    ....    MOVT     r0,#:UPPER16: receiveQueue
        0x0000005e:    f7fffffe    ....    BL       RingBuffer_Full
        0x00000062:    2800        .(      CMP      r0,#0
        0x00000064:    d109        ..      BNE      {pc}+0x16 ; 0x7a
        0x00000066:    e7ff        ..      B        {pc}+0x2 ; 0x68
        0x00000068:    f89d1007    ....    LDRB     r1,[sp,#7]
        0x0000006c:    f2400000    @...    MOVW     r0,#:LOWER16: receiveQueue
        0x00000070:    f2c00000    ....    MOVT     r0,#:UPPER16: receiveQueue
        0x00000074:    f7fffffe    ....    BL       RingBuffer_Enqueue_Byte
        0x00000078:    e000        ..      B        {pc}+0x4 ; 0x7c
        0x0000007a:    e7ff        ..      B        {pc}+0x2 ; 0x7c
        0x0000007c:    e7ff        ..      B        {pc}+0x2 ; 0x7e
        0x0000007e:    f2460008    F...    MOV      r0,#0x6008
        0x00000082:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000086:    6800        .h      LDR      r0,[r0,#0]
        0x00000088:    0200        ..      LSLS     r0,r0,#8
        0x0000008a:    2800        .(      CMP      r0,#0
        0x0000008c:    d528        (.      BPL      {pc}+0x54 ; 0xe0
        0x0000008e:    e7ff        ..      B        {pc}+0x2 ; 0x90
        0x00000090:    f2460004    F...    MOV      r0,#0x6004
        0x00000094:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000098:    6800        .h      LDR      r0,[r0,#0]
        0x0000009a:    0200        ..      LSLS     r0,r0,#8
        0x0000009c:    2800        .(      CMP      r0,#0
        0x0000009e:    d51f        ..      BPL      {pc}+0x42 ; 0xe0
        0x000000a0:    e7ff        ..      B        {pc}+0x2 ; 0xa2
        0x000000a2:    f2400000    @...    MOVW     r0,#:LOWER16: transmitQueue
        0x000000a6:    f2c00000    ....    MOVT     r0,#:UPPER16: transmitQueue
        0x000000aa:    f7fffffe    ....    BL       RingBuffer_Empty
        0x000000ae:    2800        .(      CMP      r0,#0
        0x000000b0:    d10c        ..      BNE      {pc}+0x1c ; 0xcc
        0x000000b2:    e7ff        ..      B        {pc}+0x2 ; 0xb4
        0x000000b4:    f2400000    @...    MOVW     r0,#:LOWER16: transmitQueue
        0x000000b8:    f2c00000    ....    MOVT     r0,#:UPPER16: transmitQueue
        0x000000bc:    f7fffffe    ....    BL       RingBuffer_Dequeue_Byte
        0x000000c0:    f246010c    F...    MOV      r1,#0x600c
        0x000000c4:    f2c4010d    ....    MOVT     r1,#0x400d
        0x000000c8:    6008        .`      STR      r0,[r1,#0]
        0x000000ca:    e008        ..      B        {pc}+0x14 ; 0xde
        0x000000cc:    f2460008    F...    MOV      r0,#0x6008
        0x000000d0:    f2c4000d    ....    MOVT     r0,#0x400d
        0x000000d4:    6801        .h      LDR      r1,[r0,#0]
        0x000000d6:    f4210100    !...    BIC      r1,r1,#0x800000
        0x000000da:    6001        .`      STR      r1,[r0,#0]
        0x000000dc:    e7ff        ..      B        {pc}+0x2 ; 0xde
        0x000000de:    e7ff        ..      B        {pc}+0x2 ; 0xe0
        0x000000e0:    b002        ..      ADD      sp,sp,#8
        0x000000e2:    bd80        ..      POP      {r7,pc}

** Section #17 '.rel.text.LPUART4_IRQHandler' (SHT_REL)
    Size   : 96 bytes (alignment 4)
    Symbol table #61 '.symtab'
    12 relocations applied to section #16 '.text.LPUART4_IRQHandler'


** Section #18 '.ARM.exidx.text.LPUART4_IRQHandler' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #16 '.text.LPUART4_IRQHandler'


** Section #19 '.rel.ARM.exidx.text.LPUART4_IRQHandler' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #18 '.ARM.exidx.text.LPUART4_IRQHandler'


** Section #20 '.text.fputc' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 86 bytes (alignment 4)
    Address: 0x00000000

    $t.6
    [Anonymous symbol #424]
    fputc
        0x00000000:    b083        ..      SUB      sp,sp,#0xc
        0x00000002:    9002        ..      STR      r0,[sp,#8]
        0x00000004:    9101        ..      STR      r1,[sp,#4]
        0x00000006:    e7ff        ..      B        {pc}+0x2 ; 0x8
        0x00000008:    f2460004    F...    MOV      r0,#0x6004
        0x0000000c:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000010:    6800        .h      LDR      r0,[r0,#0]
        0x00000012:    2100        .!      MOVS     r1,#0
        0x00000014:    0200        ..      LSLS     r0,r0,#8
        0x00000016:    2800        .(      CMP      r0,#0
        0x00000018:    9100        ..      STR      r1,[sp,#0]
        0x0000001a:    d40c        ..      BMI      {pc}+0x1c ; 0x36
        0x0000001c:    e7ff        ..      B        {pc}+0x2 ; 0x1e
        0x0000001e:    f2460004    F...    MOV      r0,#0x6004
        0x00000022:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000026:    6800        .h      LDR      r0,[r0,#0]
        0x00000028:    f4000080    ....    AND      r0,r0,#0x400000
        0x0000002c:    2101        .!      MOVS     r1,#1
        0x0000002e:    ea815090    ...P    EOR      r0,r1,r0,LSR #22
        0x00000032:    9000        ..      STR      r0,[sp,#0]
        0x00000034:    e7ff        ..      B        {pc}+0x2 ; 0x36
        0x00000036:    9800        ..      LDR      r0,[sp,#0]
        0x00000038:    07c0        ..      LSLS     r0,r0,#31
        0x0000003a:    2800        .(      CMP      r0,#0
        0x0000003c:    d001        ..      BEQ      {pc}+0x6 ; 0x42
        0x0000003e:    e7ff        ..      B        {pc}+0x2 ; 0x40
        0x00000040:    e7e2        ..      B        {pc}-0x38 ; 0x8
        0x00000042:    f89d0008    ....    LDRB     r0,[sp,#8]
        0x00000046:    f246010c    F...    MOV      r1,#0x600c
        0x0000004a:    f2c4010d    ....    MOVT     r1,#0x400d
        0x0000004e:    6008        .`      STR      r0,[r1,#0]
        0x00000050:    9802        ..      LDR      r0,[sp,#8]
        0x00000052:    b003        ..      ADD      sp,sp,#0xc
        0x00000054:    4770        pG      BX       lr

** Section #21 '.ARM.exidx.text.fputc' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #20 '.text.fputc'


** Section #22 '.rel.ARM.exidx.text.fputc' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #21 '.ARM.exidx.text.fputc'


** Section #23 '.text.fgetc' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 42 bytes (alignment 4)
    Address: 0x00000000

    $t.7
    [Anonymous symbol #425]
    fgetc
        0x00000000:    b081        ..      SUB      sp,sp,#4
        0x00000002:    9000        ..      STR      r0,[sp,#0]
        0x00000004:    e7ff        ..      B        {pc}+0x2 ; 0x6
        0x00000006:    f2460004    F...    MOV      r0,#0x6004
        0x0000000a:    f2c4000d    ....    MOVT     r0,#0x400d
        0x0000000e:    6800        .h      LDR      r0,[r0,#0]
        0x00000010:    0280        ..      LSLS     r0,r0,#10
        0x00000012:    2800        .(      CMP      r0,#0
        0x00000014:    d401        ..      BMI      {pc}+0x6 ; 0x1a
        0x00000016:    e7ff        ..      B        {pc}+0x2 ; 0x18
        0x00000018:    e7f5        ..      B        {pc}-0x12 ; 0x6
        0x0000001a:    f246000c    F...    MOV      r0,#0x600c
        0x0000001e:    f2c4000d    ....    MOVT     r0,#0x400d
        0x00000022:    6800        .h      LDR      r0,[r0,#0]
        0x00000024:    b2c0        ..      UXTB     r0,r0
        0x00000026:    b001        ..      ADD      sp,sp,#4
        0x00000028:    4770        pG      BX       lr

** Section #24 '.ARM.exidx.text.fgetc' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #23 '.text.fgetc'


** Section #25 '.rel.ARM.exidx.text.fgetc' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #24 '.ARM.exidx.text.fgetc'


** Section #26 '.text.OBLEDs_init' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 116 bytes (alignment 4)
    Address: 0x00000000

    $t.8
    [Anonymous symbol #426]
    OBLEDs_init
        0x00000000:    f2480038    H.8.    MOV      r0,#0x8038
        0x00000004:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000008:    6801        .h      LDR      r1,[r0,#0]
        0x0000000a:    f4416100    A..a    ORR      r1,r1,#0x800
        0x0000000e:    6001        .`      STR      r1,[r0,#0]
        0x00000010:    f24b0020    K. .    MOV      r0,#0xb020
        0x00000014:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000018:    f44f7180    O..q    MOV      r1,#0x100
        0x0000001c:    6001        .`      STR      r1,[r0,#0]
        0x0000001e:    f24b0024    K.$.    MOV      r0,#0xb024
        0x00000022:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000026:    6001        .`      STR      r1,[r0,#0]
        0x00000028:    f24b0028    K.(.    MOV      r0,#0xb028
        0x0000002c:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000030:    6001        .`      STR      r1,[r0,#0]
        0x00000032:    f24f0094    O...    MOV      r0,#0xf094
        0x00000036:    f2c4000f    ....    MOVT     r0,#0x400f
        0x0000003a:    6801        .h      LDR      r1,[r0,#0]
        0x0000003c:    f4417180    A..q    ORR      r1,r1,#0x100
        0x00000040:    6001        .`      STR      r1,[r0,#0]
        0x00000042:    6801        .h      LDR      r1,[r0,#0]
        0x00000044:    f4417100    A..q    ORR      r1,r1,#0x200
        0x00000048:    6001        .`      STR      r1,[r0,#0]
        0x0000004a:    6801        .h      LDR      r1,[r0,#0]
        0x0000004c:    f4416180    A..a    ORR      r1,r1,#0x400
        0x00000050:    6001        .`      STR      r1,[r0,#0]
        0x00000052:    f24f0084    O...    MOV      r0,#0xf084
        0x00000056:    f2c4000f    ....    MOVT     r0,#0x400f
        0x0000005a:    6801        .h      LDR      r1,[r0,#0]
        0x0000005c:    f4417180    A..q    ORR      r1,r1,#0x100
        0x00000060:    6001        .`      STR      r1,[r0,#0]
        0x00000062:    6801        .h      LDR      r1,[r0,#0]
        0x00000064:    f4417100    A..q    ORR      r1,r1,#0x200
        0x00000068:    6001        .`      STR      r1,[r0,#0]
        0x0000006a:    6801        .h      LDR      r1,[r0,#0]
        0x0000006c:    f4416180    A..a    ORR      r1,r1,#0x400
        0x00000070:    6001        .`      STR      r1,[r0,#0]
        0x00000072:    4770        pG      BX       lr

** Section #27 '.ARM.exidx.text.OBLEDs_init' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #26 '.text.OBLEDs_init'


** Section #28 '.rel.ARM.exidx.text.OBLEDs_init' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #27 '.ARM.exidx.text.OBLEDs_init'


** Section #29 '.text.main' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 1342 bytes (alignment 4)
    Address: 0x00000000

    $t.9
    [Anonymous symbol #427]
    main
        0x00000000:    e92d41f0    -..A    PUSH     {r4-r8,lr}
        0x00000004:    b0a6        ..      SUB      sp,sp,#0x98
        0x00000006:    f44f30e1    O..0    MOV      r0,#0x1c200
        0x0000000a:    f7fffffe    ....    BL       Debug_init_uart ; 0x0 Section #3
        0x0000000e:    f7fffffe    ....    BL       OBLEDs_init ; 0x0 Section #26
        0x00000012:    f2400000    @...    MOVW     r0,#:LOWER16: SystemCoreClock
        0x00000016:    f2c00000    ....    MOVT     r0,#:UPPER16: SystemCoreClock
        0x0000001a:    6801        .h      LDR      r1,[r0,#0]
        0x0000001c:    f2400000    @...    MOVW     r0,#:LOWER16: .L.str
        0x00000020:    f2c00000    ....    MOVT     r0,#:UPPER16: .L.str
        0x00000024:    f7fffffe    ....    BL       printf
        0x00000028:    f2411111    A...    MOV      r1,#0x1111
        0x0000002c:    f2c00101    ....    MOVT     r1,#1
        0x00000030:    9125        %.      STR      r1,[sp,#0x94]
        0x00000032:    2100        .!      MOVS     r1,#0
        0x00000034:    f8ad1092    ....    STRH     r1,[sp,#0x92]
        0x00000038:    f88d1091    ....    STRB     r1,[sp,#0x91]
        0x0000003c:    f44f62fa    O..b    MOV      r2,#0x7d0
        0x00000040:    f8ad2092    ...     STRH     r2,[sp,#0x92]
        0x00000044:    f8bd2092    ...     LDRH     r2,[sp,#0x92]
        0x00000048:    f8ad208e    ...     STRH     r2,[sp,#0x8e]
        0x0000004c:    9122        ".      STR      r1,[sp,#0x88]
        0x0000004e:    e7ff        ..      B        {pc}+0x2 ; 0x50
        0x00000050:    9822        ".      LDR      r0,[sp,#0x88]
        0x00000052:    2802        .(      CMP      r0,#2
        0x00000054:    d811        ..      BHI      {pc}+0x26 ; 0x7a
        0x00000056:    e7ff        ..      B        {pc}+0x2 ; 0x58
        0x00000058:    f8bd008e    ....    LDRH     r0,[sp,#0x8e]
        0x0000005c:    f89d1091    ....    LDRB     r1,[sp,#0x91]
        0x00000060:    4048        H@      EORS     r0,r0,r1
        0x00000062:    f88d0091    ....    STRB     r0,[sp,#0x91]
        0x00000066:    f8bd008e    ....    LDRH     r0,[sp,#0x8e]
        0x0000006a:    0900        ..      LSRS     r0,r0,#4
        0x0000006c:    f8ad008e    ....    STRH     r0,[sp,#0x8e]
        0x00000070:    e7ff        ..      B        {pc}+0x2 ; 0x72
        0x00000072:    9822        ".      LDR      r0,[sp,#0x88]
        0x00000074:    3001        .0      ADDS     r0,#1
        0x00000076:    9022        ".      STR      r0,[sp,#0x88]
        0x00000078:    e7ea        ..      B        {pc}-0x28 ; 0x50
        0x0000007a:    f89d0091    ....    LDRB     r0,[sp,#0x91]
        0x0000007e:    f000000f    ....    AND      r0,r0,#0xf
        0x00000082:    f88d0091    ....    STRB     r0,[sp,#0x91]
        0x00000086:    f8bd0092    ....    LDRH     r0,[sp,#0x92]
        0x0000008a:    f89d1091    ....    LDRB     r1,[sp,#0x91]
        0x0000008e:    ea411000    A...    ORR      r0,r1,r0,LSL #4
        0x00000092:    f8ad0092    ....    STRH     r0,[sp,#0x92]
        0x00000096:    2000        .       MOVS     r0,#0
        0x00000098:    9021        !.      STR      r0,[sp,#0x84]
        0x0000009a:    e7ff        ..      B        {pc}+0x2 ; 0x9c
        0x0000009c:    9821        !.      LDR      r0,[sp,#0x84]
        0x0000009e:    2810        .(      CMP      r0,#0x10
        0x000000a0:    d83e        >.      BHI      {pc}+0x80 ; 0x120
        0x000000a2:    e7ff        ..      B        {pc}+0x2 ; 0xa4
        0x000000a4:    9821        !.      LDR      r0,[sp,#0x84]
        0x000000a6:    f8bd1092    ....    LDRH     r1,[sp,#0x92]
        0x000000aa:    fa21f000    !...    LSR      r0,r1,r0
        0x000000ae:    07c0        ..      LSLS     r0,r0,#31
        0x000000b0:    2800        .(      CMP      r0,#0
        0x000000b2:    d00f        ..      BEQ      {pc}+0x22 ; 0xd4
        0x000000b4:    e7ff        ..      B        {pc}+0x2 ; 0xb6
        0x000000b6:    9825        %.      LDR      r0,[sp,#0x94]
        0x000000b8:    21bf        .!      MOVS     r1,#0xbf
        0x000000ba:    4348        HC      MULS     r0,r1,r0
        0x000000bc:    b280        ..      UXTH     r0,r0
        0x000000be:    0a00        ..      LSRS     r0,r0,#8
        0x000000c0:    9921        !.      LDR      r1,[sp,#0x84]
        0x000000c2:    f1c10110    ....    RSB      r1,r1,#0x10
        0x000000c6:    f2400200    @...    MOVW     r2,#:LOWER16: global_Dshot_command_buffer
        0x000000ca:    f2c00200    ....    MOVT     r2,#:UPPER16: global_Dshot_command_buffer
        0x000000ce:    f8220011    "...    STRH     r0,[r2,r1,LSL #1]
        0x000000d2:    e00e        ..      B        {pc}+0x20 ; 0xf2
        0x000000d4:    9825        %.      LDR      r0,[sp,#0x94]
        0x000000d6:    eb000040    ..@.    ADD      r0,r0,r0,LSL #1
        0x000000da:    f3c000c7    ....    UBFX     r0,r0,#3,#8
        0x000000de:    9921        !.      LDR      r1,[sp,#0x84]
        0x000000e0:    f1c10110    ....    RSB      r1,r1,#0x10
        0x000000e4:    f2400200    @...    MOVW     r2,#:LOWER16: global_Dshot_command_buffer
        0x000000e8:    f2c00200    ....    MOVT     r2,#:UPPER16: global_Dshot_command_buffer
        0x000000ec:    f8220011    "...    STRH     r0,[r2,r1,LSL #1]
        0x000000f0:    e7ff        ..      B        {pc}+0x2 ; 0xf2
        0x000000f2:    9821        !.      LDR      r0,[sp,#0x84]
        0x000000f4:    f1c00110    ....    RSB      r1,r0,#0x10
        0x000000f8:    f2400200    @...    MOVW     r2,#:LOWER16: global_Dshot_command_buffer
        0x000000fc:    f2c00200    ....    MOVT     r2,#:UPPER16: global_Dshot_command_buffer
        0x00000100:    f8322011    2..     LDRH     r2,[r2,r1,LSL #1]
        0x00000104:    f2400100    @...    MOVW     r1,#:LOWER16: .L.str.1
        0x00000108:    f2c00100    ....    MOVT     r1,#:UPPER16: .L.str.1
        0x0000010c:    901f        ..      STR      r0,[sp,#0x7c]
        0x0000010e:    4608        .F      MOV      r0,r1
        0x00000110:    991f        ..      LDR      r1,[sp,#0x7c]
        0x00000112:    f7fffffe    ....    BL       printf
        0x00000116:    e7ff        ..      B        {pc}+0x2 ; 0x118
        0x00000118:    9821        !.      LDR      r0,[sp,#0x84]
        0x0000011a:    3001        .0      ADDS     r0,#1
        0x0000011c:    9021        !.      STR      r0,[sp,#0x84]
        0x0000011e:    e7bd        ..      B        {pc}-0x82 ; 0x9c
        0x00000120:    f248003c    H.<.    MOV      r0,#0x803c
        0x00000124:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000128:    6801        .h      LDR      r1,[r0,#0]
        0x0000012a:    f0417180    A..q    ORR      r1,r1,#0x1000000
        0x0000012e:    6001        .`      STR      r1,[r0,#0]
        0x00000130:    f2480038    H.8.    MOV      r0,#0x8038
        0x00000134:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000138:    6801        .h      LDR      r1,[r0,#0]
        0x0000013a:    f4416100    A..a    ORR      r1,r1,#0x800
        0x0000013e:    6001        .`      STR      r1,[r0,#0]
        0x00000140:    f24b000c    K...    MOV      r0,#0xb00c
        0x00000144:    f2c40004    ....    MOVT     r0,#0x4004
        0x00000148:    f44f6180    O..a    MOV      r1,#0x400
        0x0000014c:    6001        .`      STR      r1,[r0,#0]
        0x0000014e:    f244000c    D...    MOV      r0,#0x400c
        0x00000152:    f2c40006    ....    MOVT     r0,#0x4006
        0x00000156:    7800        .x      LDRB     r0,[r0,#0]
        0x00000158:    f0000103    ....    AND      r1,r0,#3
        0x0000015c:    f2400000    @...    MOVW     r0,#:LOWER16: .L.str.2
        0x00000160:    f2c00000    ....    MOVT     r0,#:UPPER16: .L.str.2
        0x00000164:    f7fffffe    ....    BL       printf
        0x00000168:    9925        %.      LDR      r1,[sp,#0x94]
        0x0000016a:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.3
        0x0000016e:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.3
        0x00000172:    901e        ..      STR      r0,[sp,#0x78]
        0x00000174:    4610        .F      MOV      r0,r2
        0x00000176:    f7fffffe    ....    BL       printf
        0x0000017a:    f2480140    H.@.    MOV      r1,#0x8040
        0x0000017e:    f2c40104    ....    MOVT     r1,#0x4004
        0x00000182:    680a        .h      LDR      r2,[r1,#0]
        0x00000184:    f0420202    B...    ORR      r2,r2,#2
        0x00000188:    600a        .`      STR      r2,[r1,#0]
        0x0000018a:    f248011a    H...    MOV      r1,#0x801a
        0x0000018e:    f2c40100    ....    MOVT     r1,#0x4000
        0x00000192:    780a        .x      LDRB     r2,[r1,#0]
        0x00000194:    700a        .p      STRB     r2,[r1,#0]
        0x00000196:    f2480119    H...    MOV      r1,#0x8019
        0x0000019a:    f2c40100    ....    MOVT     r1,#0x4000
        0x0000019e:    2200        ."      MOVS     r2,#0
        0x000001a0:    700a        .p      STRB     r2,[r1,#0]
        0x000001a2:    f249011c    I...    MOV      r1,#0x901c
        0x000001a6:    f2c40100    ....    MOVT     r1,#0x4000
        0x000001aa:    880b        ..      LDRH     r3,[r1,#0]
        0x000001ac:    f0230310    #...    BIC      r3,r3,#0x10
        0x000001b0:    800b        ..      STRH     r3,[r1,#0]
        0x000001b2:    f249031e    I...    MOV      r3,#0x901e
        0x000001b6:    f2c40300    ....    MOVT     r3,#0x4000
        0x000001ba:    f04f0c01    O...    MOV      r12,#1
        0x000001be:    f8a3c000    ....    STRH     r12,[r3,#0]
        0x000001c2:    f2490316    I...    MOV      r3,#0x9016
        0x000001c6:    f2c40300    ....    MOVT     r3,#0x4000
        0x000001ca:    f8a3c000    ....    STRH     r12,[r3,#0]
        0x000001ce:    f2490308    I...    MOV      r3,#0x9008
        0x000001d2:    f2c40300    ....    MOVT     r3,#0x4000
        0x000001d6:    f04f0e10    O...    MOV      lr,#0x10
        0x000001da:    f8c3e000    ....    STR      lr,[r3,#0]
        0x000001de:    f2400300    @...    MOVW     r3,#:LOWER16: dma_test_src
        0x000001e2:    f2c00300    ....    MOVT     r3,#:UPPER16: dma_test_src
        0x000001e6:    f2490400    I...    MOVW     r4,#0x9000
        0x000001ea:    f2c40400    ....    MOVT     r4,#0x4000
        0x000001ee:    6023        #`      STR      r3,[r4,#0]
        0x000001f0:    f2490304    I...    MOV      r3,#0x9004
        0x000001f4:    f2c40300    ....    MOVT     r3,#0x4000
        0x000001f8:    f8a3c000    ....    STRH     r12,[r3,#0]
        0x000001fc:    f2490306    I...    MOV      r3,#0x9006
        0x00000200:    f2c40300    ....    MOVT     r3,#0x4000
        0x00000204:    801a        ..      STRH     r2,[r3,#0]
        0x00000206:    f249050c    I...    MOV      r5,#0x900c
        0x0000020a:    f2c40500    ....    MOVT     r5,#0x4000
        0x0000020e:    f06f060f    o...    MVN      r6,#0xf
        0x00000212:    602e        .`      STR      r6,[r5,#0]
        0x00000214:    f2400500    @...    MOVW     r5,#:LOWER16: dma_test_dest
        0x00000218:    f2c00500    ....    MOVT     r5,#:UPPER16: dma_test_dest
        0x0000021c:    f2490710    I...    MOV      r7,#0x9010
        0x00000220:    f2c40700    ....    MOVT     r7,#0x4000
        0x00000224:    603d        =`      STR      r5,[r7,#0]
        0x00000226:    f2490514    I...    MOV      r5,#0x9014
        0x0000022a:    f2c40500    ....    MOVT     r5,#0x4000
        0x0000022e:    f04f0804    O...    MOV      r8,#4
        0x00000232:    f8a58000    ....    STRH     r8,[r5,#0]
        0x00000236:    2502        .%      MOVS     r5,#2
        0x00000238:    801d        ..      STRH     r5,[r3,#0]
        0x0000023a:    f2490318    I...    MOV      r3,#0x9018
        0x0000023e:    f2c40300    ....    MOVT     r3,#0x4000
        0x00000242:    601e        .`      STR      r6,[r3,#0]
        0x00000244:    880b        ..      LDRH     r3,[r1,#0]
        0x00000246:    f0430302    C...    ORR      r3,r3,#2
        0x0000024a:    800b        ..      STRH     r3,[r1,#0]
        0x0000024c:    901d        ..      STR      r0,[sp,#0x74]
        0x0000024e:    4670        pF      MOV      r0,lr
        0x00000250:    4629        )F      MOV      r1,r5
        0x00000252:    921c        ..      STR      r2,[sp,#0x70]
        0x00000254:    f8cdc06c    ..l.    STR      r12,[sp,#0x6c]
        0x00000258:    f8cde068    ..h.    STR      lr,[sp,#0x68]
        0x0000025c:    9419        ..      STR      r4,[sp,#0x64]
        0x0000025e:    9718        ..      STR      r7,[sp,#0x60]
        0x00000260:    f7fffffe    ....    BL       __NVIC_SetPriority ; 0x0 Section #7
        0x00000264:    981a        ..      LDR      r0,[sp,#0x68]
        0x00000266:    f7fffffe    ....    BL       __NVIC_ClearPendingIRQ ; 0x0 Section #10
        0x0000026a:    981a        ..      LDR      r0,[sp,#0x68]
        0x0000026c:    f7fffffe    ....    BL       __NVIC_EnableIRQ ; 0x0 Section #13
        0x00000270:    f2400000    @...    MOVW     r0,#:LOWER16: .L.str.4
        0x00000274:    f2c00000    ....    MOVT     r0,#:UPPER16: .L.str.4
        0x00000278:    f2400100    @...    MOVW     r1,#:LOWER16: global_Dshot_command_buffer
        0x0000027c:    f2c00100    ....    MOVT     r1,#:UPPER16: global_Dshot_command_buffer
        0x00000280:    f7fffffe    ....    BL       printf
        0x00000284:    9919        ..      LDR      r1,[sp,#0x64]
        0x00000286:    6809        .h      LDR      r1,[r1,#0]
        0x00000288:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.5
        0x0000028c:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.5
        0x00000290:    9017        ..      STR      r0,[sp,#0x5c]
        0x00000292:    4610        .F      MOV      r0,r2
        0x00000294:    f7fffffe    ....    BL       printf
        0x00000298:    f2400100    @...    MOVW     r1,#:LOWER16: .L.str.6
        0x0000029c:    f2c00100    ....    MOVT     r1,#:UPPER16: .L.str.6
        0x000002a0:    f2480220    H. .    MOV      r2,#0x8020
        0x000002a4:    f2c40203    ....    MOVT     r2,#0x4003
        0x000002a8:    9016        ..      STR      r0,[sp,#0x58]
        0x000002aa:    4608        .F      MOV      r0,r1
        0x000002ac:    4611        .F      MOV      r1,r2
        0x000002ae:    f7fffffe    ....    BL       printf
        0x000002b2:    9918        ..      LDR      r1,[sp,#0x60]
        0x000002b4:    6809        .h      LDR      r1,[r1,#0]
        0x000002b6:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.7
        0x000002ba:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.7
        0x000002be:    9015        ..      STR      r0,[sp,#0x54]
        0x000002c0:    4610        .F      MOV      r0,r2
        0x000002c2:    f7fffffe    ....    BL       printf
        0x000002c6:    f2400100    @...    MOVW     r1,#:LOWER16: SystemCoreClock
        0x000002ca:    f2c00100    ....    MOVT     r1,#:UPPER16: SystemCoreClock
        0x000002ce:    680a        .h      LDR      r2,[r1,#0]
        0x000002d0:    f2400300    @...    MOVW     r3,#:LOWER16: .L.str
        0x000002d4:    f2c00300    ....    MOVT     r3,#:UPPER16: .L.str
        0x000002d8:    9014        ..      STR      r0,[sp,#0x50]
        0x000002da:    4618        .F      MOV      r0,r3
        0x000002dc:    9113        ..      STR      r1,[sp,#0x4c]
        0x000002de:    4611        .F      MOV      r1,r2
        0x000002e0:    f7fffffe    ....    BL       printf
        0x000002e4:    9913        ..      LDR      r1,[sp,#0x4c]
        0x000002e6:    680a        .h      LDR      r2,[r1,#0]
        0x000002e8:    f2480344    H.D.    MOV      r3,#0x8044
        0x000002ec:    f2c40304    ....    MOVT     r3,#0x4004
        0x000002f0:    f8d3c000    ....    LDR      r12,[r3,#0]
        0x000002f4:    f8dde06c    ..l.    LDR      lr,[sp,#0x6c]
        0x000002f8:    eb0e7c1c    ...|    ADD      r12,lr,r12,LSR #28
        0x000002fc:    fb02f20c    ....    MUL      r2,r2,r12
        0x00000300:    681b        .h      LDR      r3,[r3,#0]
        0x00000302:    f0036370    ..pc    AND      r3,r3,#0xf000000
        0x00000306:    eb0e6313    ...c    ADD      r3,lr,r3,LSR #24
        0x0000030a:    fbb2f1f3    ....    UDIV     r1,r2,r3
        0x0000030e:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.8
        0x00000312:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.8
        0x00000316:    9012        ..      STR      r0,[sp,#0x48]
        0x00000318:    4610        .F      MOV      r0,r2
        0x0000031a:    f7fffffe    ....    BL       printf
        0x0000031e:    f2400100    @...    MOVW     r1,#:LOWER16: .L.str.9
        0x00000322:    f2c00100    ....    MOVT     r1,#:UPPER16: .L.str.9
        0x00000326:    9011        ..      STR      r0,[sp,#0x44]
        0x00000328:    4608        .F      MOV      r0,r1
        0x0000032a:    f7fffffe    ....    BL       printf
        0x0000032e:    991c        ..      LDR      r1,[sp,#0x70]
        0x00000330:    9120         .      STR      r1,[sp,#0x80]
        0x00000332:    e7ff        ..      B        {pc}+0x2 ; 0x334
        0x00000334:    9820         .      LDR      r0,[sp,#0x80]
        0x00000336:    f24a1120    J. .    MOV      r1,#0xa120
        0x0000033a:    f2c00107    ....    MOVT     r1,#7
        0x0000033e:    4288        .B      CMP      r0,r1
        0x00000340:    f04080e5    @...    BNE.W    {pc}+0x1ce ; 0x50e
        0x00000344:    e7ff        ..      B        {pc}+0x2 ; 0x346
        0x00000346:    f24f0088    O...    MOV      r0,#0xf088
        0x0000034a:    f2c4000f    ....    MOVT     r0,#0x400f
        0x0000034e:    6801        .h      LDR      r1,[r0,#0]
        0x00000350:    f4416180    A..a    ORR      r1,r1,#0x400
        0x00000354:    6001        .`      STR      r1,[r0,#0]
        0x00000356:    f248001d    H...    MOV      r0,#0x801d
        0x0000035a:    f2c40000    ....    MOVT     r0,#0x4000
        0x0000035e:    7801        .x      LDRB     r1,[r0,#0]
        0x00000360:    7001        .p      STRB     r1,[r0,#0]
        0x00000362:    f2480034    H.4.    MOV      r0,#0x8034
        0x00000366:    f2c40000    ....    MOVT     r0,#0x4000
        0x0000036a:    6800        .h      LDR      r0,[r0,#0]
        0x0000036c:    f0000101    ....    AND      r1,r0,#1
        0x00000370:    f2400000    @...    MOVW     r0,#:LOWER16: .L.str.10
        0x00000374:    f2c00000    ....    MOVT     r0,#:UPPER16: .L.str.10
        0x00000378:    f7fffffe    ....    BL       printf
        0x0000037c:    f2480104    H...    MOV      r1,#0x8004
        0x00000380:    f2c40100    ....    MOVT     r1,#0x4000
        0x00000384:    680a        .h      LDR      r2,[r1,#0]
        0x00000386:    f0024200    ...B    AND      r2,r2,#0x80000000
        0x0000038a:    f2400300    @...    MOVW     r3,#:LOWER16: .L.str.11
        0x0000038e:    f2c00300    ....    MOVT     r3,#:UPPER16: .L.str.11
        0x00000392:    9010        ..      STR      r0,[sp,#0x40]
        0x00000394:    4618        .F      MOV      r0,r3
        0x00000396:    910f        ..      STR      r1,[sp,#0x3c]
        0x00000398:    4611        .F      MOV      r1,r2
        0x0000039a:    f7fffffe    ....    BL       printf
        0x0000039e:    990f        ..      LDR      r1,[sp,#0x3c]
        0x000003a0:    680a        .h      LDR      r2,[r1,#0]
        0x000003a2:    f4023180    ...1    AND      r1,r2,#0x10000
        0x000003a6:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.12
        0x000003aa:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.12
        0x000003ae:    900e        ..      STR      r0,[sp,#0x38]
        0x000003b0:    4610        .F      MOV      r0,r2
        0x000003b2:    f7fffffe    ....    BL       printf
        0x000003b6:    990f        ..      LDR      r1,[sp,#0x3c]
        0x000003b8:    680a        .h      LDR      r2,[r1,#0]
        0x000003ba:    f4024100    ...A    AND      r1,r2,#0x8000
        0x000003be:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.13
        0x000003c2:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.13
        0x000003c6:    900d        ..      STR      r0,[sp,#0x34]
        0x000003c8:    4610        .F      MOV      r0,r2
        0x000003ca:    f7fffffe    ....    BL       printf
        0x000003ce:    990f        ..      LDR      r1,[sp,#0x3c]
        0x000003d0:    680a        .h      LDR      r2,[r1,#0]
        0x000003d2:    f4024180    ...A    AND      r1,r2,#0x4000
        0x000003d6:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.14
        0x000003da:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.14
        0x000003de:    900c        ..      STR      r0,[sp,#0x30]
        0x000003e0:    4610        .F      MOV      r0,r2
        0x000003e2:    f7fffffe    ....    BL       printf
        0x000003e6:    990f        ..      LDR      r1,[sp,#0x3c]
        0x000003e8:    680a        .h      LDR      r2,[r1,#0]
        0x000003ea:    f0020180    ....    AND      r1,r2,#0x80
        0x000003ee:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.15
        0x000003f2:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.15
        0x000003f6:    900b        ..      STR      r0,[sp,#0x2c]
        0x000003f8:    4610        .F      MOV      r0,r2
        0x000003fa:    f7fffffe    ....    BL       printf
        0x000003fe:    990f        ..      LDR      r1,[sp,#0x3c]
        0x00000400:    680a        .h      LDR      r2,[r1,#0]
        0x00000402:    f0020140    ..@.    AND      r1,r2,#0x40
        0x00000406:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.16
        0x0000040a:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.16
        0x0000040e:    900a        ..      STR      r0,[sp,#0x28]
        0x00000410:    4610        .F      MOV      r0,r2
        0x00000412:    f7fffffe    ....    BL       printf
        0x00000416:    990f        ..      LDR      r1,[sp,#0x3c]
        0x00000418:    680a        .h      LDR      r2,[r1,#0]
        0x0000041a:    f0020120    .. .    AND      r1,r2,#0x20
        0x0000041e:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.17
        0x00000422:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.17
        0x00000426:    9009        ..      STR      r0,[sp,#0x24]
        0x00000428:    4610        .F      MOV      r0,r2
        0x0000042a:    f7fffffe    ....    BL       printf
        0x0000042e:    990f        ..      LDR      r1,[sp,#0x3c]
        0x00000430:    680a        .h      LDR      r2,[r1,#0]
        0x00000432:    f0020110    ....    AND      r1,r2,#0x10
        0x00000436:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.18
        0x0000043a:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.18
        0x0000043e:    9008        ..      STR      r0,[sp,#0x20]
        0x00000440:    4610        .F      MOV      r0,r2
        0x00000442:    f7fffffe    ....    BL       printf
        0x00000446:    990f        ..      LDR      r1,[sp,#0x3c]
        0x00000448:    680a        .h      LDR      r2,[r1,#0]
        0x0000044a:    f0020108    ....    AND      r1,r2,#8
        0x0000044e:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.19
        0x00000452:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.19
        0x00000456:    9007        ..      STR      r0,[sp,#0x1c]
        0x00000458:    4610        .F      MOV      r0,r2
        0x0000045a:    f7fffffe    ....    BL       printf
        0x0000045e:    990f        ..      LDR      r1,[sp,#0x3c]
        0x00000460:    680a        .h      LDR      r2,[r1,#0]
        0x00000462:    f0020104    ....    AND      r1,r2,#4
        0x00000466:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.20
        0x0000046a:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.20
        0x0000046e:    9006        ..      STR      r0,[sp,#0x18]
        0x00000470:    4610        .F      MOV      r0,r2
        0x00000472:    f7fffffe    ....    BL       printf
        0x00000476:    990f        ..      LDR      r1,[sp,#0x3c]
        0x00000478:    680a        .h      LDR      r2,[r1,#0]
        0x0000047a:    f0020102    ....    AND      r1,r2,#2
        0x0000047e:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.21
        0x00000482:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.21
        0x00000486:    9005        ..      STR      r0,[sp,#0x14]
        0x00000488:    4610        .F      MOV      r0,r2
        0x0000048a:    f7fffffe    ....    BL       printf
        0x0000048e:    990f        ..      LDR      r1,[sp,#0x3c]
        0x00000490:    680a        .h      LDR      r2,[r1,#0]
        0x00000492:    f0020101    ....    AND      r1,r2,#1
        0x00000496:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.22
        0x0000049a:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.22
        0x0000049e:    9004        ..      STR      r0,[sp,#0x10]
        0x000004a0:    4610        .F      MOV      r0,r2
        0x000004a2:    f7fffffe    ....    BL       printf
        0x000004a6:    f248012c    H.,.    MOV      r1,#0x802c
        0x000004aa:    f2c40100    ....    MOVT     r1,#0x4000
        0x000004ae:    6809        .h      LDR      r1,[r1,#0]
        0x000004b0:    f0010101    ....    AND      r1,r1,#1
        0x000004b4:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.23
        0x000004b8:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.23
        0x000004bc:    9003        ..      STR      r0,[sp,#0xc]
        0x000004be:    4610        .F      MOV      r0,r2
        0x000004c0:    f7fffffe    ....    BL       printf
        0x000004c4:    9920         .      LDR      r1,[sp,#0x80]
        0x000004c6:    f2400200    @...    MOVW     r2,#:LOWER16: dma_test_src
        0x000004ca:    f2c00200    ....    MOVT     r2,#:UPPER16: dma_test_src
        0x000004ce:    6011        .`      STR      r1,[r2,#0]
        0x000004d0:    6811        .h      LDR      r1,[r2,#0]
        0x000004d2:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.24
        0x000004d6:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.24
        0x000004da:    9002        ..      STR      r0,[sp,#8]
        0x000004dc:    4610        .F      MOV      r0,r2
        0x000004de:    f7fffffe    ....    BL       printf
        0x000004e2:    f2400100    @...    MOVW     r1,#:LOWER16: dma_test_dest
        0x000004e6:    f2c00100    ....    MOVT     r1,#:UPPER16: dma_test_dest
        0x000004ea:    6809        .h      LDR      r1,[r1,#0]
        0x000004ec:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.25
        0x000004f0:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.25
        0x000004f4:    9001        ..      STR      r0,[sp,#4]
        0x000004f6:    4610        .F      MOV      r0,r2
        0x000004f8:    f7fffffe    ....    BL       printf
        0x000004fc:    f2400100    @...    MOVW     r1,#:LOWER16: .L.str.9
        0x00000500:    f2c00100    ....    MOVT     r1,#:UPPER16: .L.str.9
        0x00000504:    9000        ..      STR      r0,[sp,#0]
        0x00000506:    4608        .F      MOV      r0,r1
        0x00000508:    f7fffffe    ....    BL       printf
        0x0000050c:    e013        ..      B        {pc}+0x2a ; 0x536
        0x0000050e:    9820         .      LDR      r0,[sp,#0x80]
        0x00000510:    f2442140    D.@!    MOV      r1,#0x4240
        0x00000514:    f2c0010f    ....    MOVT     r1,#0xf
        0x00000518:    4288        .B      CMP      r0,r1
        0x0000051a:    d10b        ..      BNE      {pc}+0x1a ; 0x534
        0x0000051c:    e7ff        ..      B        {pc}+0x2 ; 0x51e
        0x0000051e:    f24f0084    O...    MOV      r0,#0xf084
        0x00000522:    f2c4000f    ....    MOVT     r0,#0x400f
        0x00000526:    6801        .h      LDR      r1,[r0,#0]
        0x00000528:    f4416180    A..a    ORR      r1,r1,#0x400
        0x0000052c:    6001        .`      STR      r1,[r0,#0]
        0x0000052e:    2000        .       MOVS     r0,#0
        0x00000530:    9020         .      STR      r0,[sp,#0x80]
        0x00000532:    e7ff        ..      B        {pc}+0x2 ; 0x534
        0x00000534:    e7ff        ..      B        {pc}+0x2 ; 0x536
        0x00000536:    9820         .      LDR      r0,[sp,#0x80]
        0x00000538:    3001        .0      ADDS     r0,#1
        0x0000053a:    9020         .      STR      r0,[sp,#0x80]
        0x0000053c:    e6fa        ..      B        {pc}-0x208 ; 0x334

** Section #30 '.rel.text.main' (SHT_REL)
    Size   : 872 bytes (alignment 4)
    Symbol table #61 '.symtab'
    109 relocations applied to section #29 '.text.main'


** Section #31 '.ARM.exidx.text.main' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #29 '.text.main'


** Section #32 '.rel.ARM.exidx.text.main' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #31 '.ARM.exidx.text.main'


** Section #33 '.text.DMA_Error_IRQHandler' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 378 bytes (alignment 4)
    Address: 0x00000000

    $t.10
    [Anonymous symbol #428]
    DMA_Error_IRQHandler
        0x00000000:    b580        ..      PUSH     {r7,lr}
        0x00000002:    b08e        ..      SUB      sp,sp,#0x38
        0x00000004:    f24f0088    O...    MOV      r0,#0xf088
        0x00000008:    f2c4000f    ....    MOVT     r0,#0x400f
        0x0000000c:    6801        .h      LDR      r1,[r0,#0]
        0x0000000e:    f4417100    A..q    ORR      r1,r1,#0x200
        0x00000012:    6001        .`      STR      r1,[r0,#0]
        0x00000014:    f2480034    H.4.    MOV      r0,#0x8034
        0x00000018:    f2c40000    ....    MOVT     r0,#0x4000
        0x0000001c:    6800        .h      LDR      r0,[r0,#0]
        0x0000001e:    f0000101    ....    AND      r1,r0,#1
        0x00000022:    f2400000    @...    MOVW     r0,#:LOWER16: .L.str.10
        0x00000026:    f2c00000    ....    MOVT     r0,#:UPPER16: .L.str.10
        0x0000002a:    f7fffffe    ....    BL       printf
        0x0000002e:    f2480104    H...    MOV      r1,#0x8004
        0x00000032:    f2c40100    ....    MOVT     r1,#0x4000
        0x00000036:    680a        .h      LDR      r2,[r1,#0]
        0x00000038:    f0024200    ...B    AND      r2,r2,#0x80000000
        0x0000003c:    f2400300    @...    MOVW     r3,#:LOWER16: .L.str.11
        0x00000040:    f2c00300    ....    MOVT     r3,#:UPPER16: .L.str.11
        0x00000044:    900d        ..      STR      r0,[sp,#0x34]
        0x00000046:    4618        .F      MOV      r0,r3
        0x00000048:    910c        ..      STR      r1,[sp,#0x30]
        0x0000004a:    4611        .F      MOV      r1,r2
        0x0000004c:    f7fffffe    ....    BL       printf
        0x00000050:    990c        ..      LDR      r1,[sp,#0x30]
        0x00000052:    680a        .h      LDR      r2,[r1,#0]
        0x00000054:    f4023180    ...1    AND      r1,r2,#0x10000
        0x00000058:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.12
        0x0000005c:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.12
        0x00000060:    900b        ..      STR      r0,[sp,#0x2c]
        0x00000062:    4610        .F      MOV      r0,r2
        0x00000064:    f7fffffe    ....    BL       printf
        0x00000068:    990c        ..      LDR      r1,[sp,#0x30]
        0x0000006a:    680a        .h      LDR      r2,[r1,#0]
        0x0000006c:    f4024100    ...A    AND      r1,r2,#0x8000
        0x00000070:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.13
        0x00000074:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.13
        0x00000078:    900a        ..      STR      r0,[sp,#0x28]
        0x0000007a:    4610        .F      MOV      r0,r2
        0x0000007c:    f7fffffe    ....    BL       printf
        0x00000080:    990c        ..      LDR      r1,[sp,#0x30]
        0x00000082:    680a        .h      LDR      r2,[r1,#0]
        0x00000084:    f4024180    ...A    AND      r1,r2,#0x4000
        0x00000088:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.14
        0x0000008c:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.14
        0x00000090:    9009        ..      STR      r0,[sp,#0x24]
        0x00000092:    4610        .F      MOV      r0,r2
        0x00000094:    f7fffffe    ....    BL       printf
        0x00000098:    990c        ..      LDR      r1,[sp,#0x30]
        0x0000009a:    680a        .h      LDR      r2,[r1,#0]
        0x0000009c:    f0020180    ....    AND      r1,r2,#0x80
        0x000000a0:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.15
        0x000000a4:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.15
        0x000000a8:    9008        ..      STR      r0,[sp,#0x20]
        0x000000aa:    4610        .F      MOV      r0,r2
        0x000000ac:    f7fffffe    ....    BL       printf
        0x000000b0:    990c        ..      LDR      r1,[sp,#0x30]
        0x000000b2:    680a        .h      LDR      r2,[r1,#0]
        0x000000b4:    f0020140    ..@.    AND      r1,r2,#0x40
        0x000000b8:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.16
        0x000000bc:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.16
        0x000000c0:    9007        ..      STR      r0,[sp,#0x1c]
        0x000000c2:    4610        .F      MOV      r0,r2
        0x000000c4:    f7fffffe    ....    BL       printf
        0x000000c8:    990c        ..      LDR      r1,[sp,#0x30]
        0x000000ca:    680a        .h      LDR      r2,[r1,#0]
        0x000000cc:    f0020120    .. .    AND      r1,r2,#0x20
        0x000000d0:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.17
        0x000000d4:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.17
        0x000000d8:    9006        ..      STR      r0,[sp,#0x18]
        0x000000da:    4610        .F      MOV      r0,r2
        0x000000dc:    f7fffffe    ....    BL       printf
        0x000000e0:    990c        ..      LDR      r1,[sp,#0x30]
        0x000000e2:    680a        .h      LDR      r2,[r1,#0]
        0x000000e4:    f0020110    ....    AND      r1,r2,#0x10
        0x000000e8:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.18
        0x000000ec:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.18
        0x000000f0:    9005        ..      STR      r0,[sp,#0x14]
        0x000000f2:    4610        .F      MOV      r0,r2
        0x000000f4:    f7fffffe    ....    BL       printf
        0x000000f8:    990c        ..      LDR      r1,[sp,#0x30]
        0x000000fa:    680a        .h      LDR      r2,[r1,#0]
        0x000000fc:    f0020108    ....    AND      r1,r2,#8
        0x00000100:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.19
        0x00000104:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.19
        0x00000108:    9004        ..      STR      r0,[sp,#0x10]
        0x0000010a:    4610        .F      MOV      r0,r2
        0x0000010c:    f7fffffe    ....    BL       printf
        0x00000110:    990c        ..      LDR      r1,[sp,#0x30]
        0x00000112:    680a        .h      LDR      r2,[r1,#0]
        0x00000114:    f0020104    ....    AND      r1,r2,#4
        0x00000118:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.20
        0x0000011c:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.20
        0x00000120:    9003        ..      STR      r0,[sp,#0xc]
        0x00000122:    4610        .F      MOV      r0,r2
        0x00000124:    f7fffffe    ....    BL       printf
        0x00000128:    990c        ..      LDR      r1,[sp,#0x30]
        0x0000012a:    680a        .h      LDR      r2,[r1,#0]
        0x0000012c:    f0020102    ....    AND      r1,r2,#2
        0x00000130:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.21
        0x00000134:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.21
        0x00000138:    9002        ..      STR      r0,[sp,#8]
        0x0000013a:    4610        .F      MOV      r0,r2
        0x0000013c:    f7fffffe    ....    BL       printf
        0x00000140:    990c        ..      LDR      r1,[sp,#0x30]
        0x00000142:    680a        .h      LDR      r2,[r1,#0]
        0x00000144:    f0020101    ....    AND      r1,r2,#1
        0x00000148:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.22
        0x0000014c:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.22
        0x00000150:    9001        ..      STR      r0,[sp,#4]
        0x00000152:    4610        .F      MOV      r0,r2
        0x00000154:    f7fffffe    ....    BL       printf
        0x00000158:    f248012c    H.,.    MOV      r1,#0x802c
        0x0000015c:    f2c40100    ....    MOVT     r1,#0x4000
        0x00000160:    6809        .h      LDR      r1,[r1,#0]
        0x00000162:    f0010101    ....    AND      r1,r1,#1
        0x00000166:    f2400200    @...    MOVW     r2,#:LOWER16: .L.str.23
        0x0000016a:    f2c00200    ....    MOVT     r2,#:UPPER16: .L.str.23
        0x0000016e:    9000        ..      STR      r0,[sp,#0]
        0x00000170:    4610        .F      MOV      r0,r2
        0x00000172:    f7fffffe    ....    BL       printf
        0x00000176:    b00e        ..      ADD      sp,sp,#0x38
        0x00000178:    bd80        ..      POP      {r7,pc}

** Section #34 '.rel.text.DMA_Error_IRQHandler' (SHT_REL)
    Size   : 336 bytes (alignment 4)
    Symbol table #61 '.symtab'
    42 relocations applied to section #33 '.text.DMA_Error_IRQHandler'


** Section #35 '.ARM.exidx.text.DMA_Error_IRQHandler' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #33 '.text.DMA_Error_IRQHandler'


** Section #36 '.rel.ARM.exidx.text.DMA_Error_IRQHandler' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #35 '.ARM.exidx.text.DMA_Error_IRQHandler'


** Section #37 '.text.FTM0_IRQHandler' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 18 bytes (alignment 4)
    Address: 0x00000000

    $t.11
    [Anonymous symbol #429]
    FTM0_IRQHandler
        0x00000000:    f24f0088    O...    MOV      r0,#0xf088
        0x00000004:    f2c4000f    ....    MOVT     r0,#0x400f
        0x00000008:    6801        .h      LDR      r1,[r0,#0]
        0x0000000a:    f4417180    A..q    ORR      r1,r1,#0x100
        0x0000000e:    6001        .`      STR      r1,[r0,#0]
        0x00000010:    4770        pG      BX       lr

** Section #38 '.ARM.exidx.text.FTM0_IRQHandler' (SHT_ARM_EXIDX) [SHF_ALLOC + SHF_LINK_ORDER]
    Size   : 8 bytes (alignment 4)
    Address: 0x00000000
    Link to section #37 '.text.FTM0_IRQHandler'


** Section #39 '.rel.ARM.exidx.text.FTM0_IRQHandler' (SHT_REL)
    Size   : 8 bytes (alignment 4)
    Symbol table #61 '.symtab'
    1 relocations applied to section #38 '.ARM.exidx.text.FTM0_IRQHandler'


** Section #40 '.bss.transmitQueue' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 262 bytes (alignment 2)
    Address: 0x00000000


** Section #41 '.bss.receiveQueue' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 262 bytes (alignment 2)
    Address: 0x00000000


** Section #42 '.bss.dma_test_src' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 16 bytes (alignment 4)
    Address: 0x00000000


** Section #43 '.bss.dma_test_dest' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 16 bytes (alignment 4)
    Address: 0x00000000


** Section #44 '.rodata.str1.1' (SHT_PROGBITS) [SHF_ALLOC + SHF_MERGE + SHF_STRINGS]
    Size   : 478 bytes
    Address: 0x00000000


** Section #45 '.bss.global_Dshot_command_buffer' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 34 bytes (alignment 2)
    Address: 0x00000000


** Section #46 '.bss.__stdout' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 4 bytes (alignment 4)
    Address: 0x00000000


** Section #47 '.bss.__stdin' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 4 bytes (alignment 4)
    Address: 0x00000000


** Section #48 '.debug_str' (SHT_PROGBITS) [SHF_MERGE + SHF_STRINGS]
    Size   : 3661 bytes


** Section #49 '.debug_abbrev' (SHT_PROGBITS)
    Size   : 474 bytes


** Section #50 '.debug_info' (SHT_PROGBITS)
    Size   : 4911 bytes


** Section #51 '.rel.debug_info' (SHT_REL)
    Size   : 3288 bytes (alignment 4)
    Symbol table #61 '.symtab'
    411 relocations applied to section #50 '.debug_info'


** Section #52 '.debug_ranges' (SHT_PROGBITS)
    Size   : 96 bytes


** Section #53 '.rel.debug_ranges' (SHT_REL)
    Size   : 176 bytes (alignment 4)
    Symbol table #61 '.symtab'
    22 relocations applied to section #52 '.debug_ranges'


** Section #54 '.comment' (SHT_PROGBITS) [SHF_MERGE + SHF_STRINGS]
    Size   : 56 bytes


** Section #55 '.note.GNU-stack' (SHT_PROGBITS)
    Size   : 0 bytes


** Section #56 '.ARM.attributes' (SHT_ARM_ATTRIBUTES)
    Size   : 88 bytes


** Section #57 '.debug_frame' (SHT_PROGBITS)
    Size   : 272 bytes (alignment 4)


** Section #58 '.rel.debug_frame' (SHT_REL)
    Size   : 176 bytes (alignment 4)
    Symbol table #61 '.symtab'
    22 relocations applied to section #57 '.debug_frame'


** Section #59 '.debug_line' (SHT_PROGBITS)
    Size   : 1809 bytes


** Section #60 '.rel.debug_line' (SHT_REL)
    Size   : 88 bytes (alignment 4)
    Symbol table #61 '.symtab'
    11 relocations applied to section #59 '.debug_line'


** Section #61 '.symtab' (SHT_SYMTAB)
    Size   : 7344 bytes (alignment 4)
    String table #1 '.strtab'
    Last local symbol no. 436


